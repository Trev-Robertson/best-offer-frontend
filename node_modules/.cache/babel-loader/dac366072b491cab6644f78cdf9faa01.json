{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js\";\nimport React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\nimport { Link } from 'react-router-dom';\nimport { Card, Feed } from 'semantic-ui-react'; // import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      specialties: [{\n        id: 1,\n        name: \"gardening\"\n      }, {\n        id: 2,\n        name: \"capentry\"\n      }, {\n        id: 3,\n        name: \"plumbing\"\n      }, {\n        id: 4,\n        name: \"technology\"\n      }, {\n        id: 5,\n        name: \"electrician\"\n      }],\n      currentUser: {}\n    };\n\n    this.addTask = (event, formState) => {\n      event.preventDefault(); // debugger\n      // let data = {\n      //   name: event.target.name.value,\n      //   description: event.target.description.value,\n      //   specialty_id: event.target.specialty.value,\n      //   user_id: this.props.user.id\n      // };\n      // event.target.reset();\n      // console.log(event);\n      // fetch(TASKS, {\n      //   method: \"POST\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(data)\n      // })\n      //   .then(res => res.json())\n      //   .then(currentUser =>\n      //     this.setState({\n      //       currentUser\n      //     })\n      //   );\n    };\n\n    this.sortBids = task => {\n      let sorted = task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      console.log();\n      return sorted[0] ? \"\".concat(sorted[0].price, \" by \").concat(sorted[0].contractor.name) : '  No Bids Yet';\n    };\n\n    this.CardExampleLinkCard = task => React.createElement(Card, {\n      href: \"/task/\".concat(task.id),\n      header: task.name,\n      meta: \"Friend\",\n      description: task.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {\n    fetch(SPECIALTIES).then(res => res.json()).then(specialties => {\n      this.setState({\n        currentUser: this.props.user\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Hi, \", this.state.currentUser ? this.state.currentUser.name : null), React.createElement(NewTaskForm, {\n      specialties: this.state.specialties,\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Current Tasks\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? this.state.currentUser.tasks.map(task => {\n      return React.createElement(\"div\", {\n        key: Math.floor(Math.random() * 100000000000 + 1),\n        onClick: () => this.props.currentTask(task),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.CardExampleLinkCard(task));\n    }) : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js"],"names":["React","NewTaskForm","isEmpty","Link","Card","Feed","SPECIALTIES","TASKS","Component","state","specialties","id","name","currentUser","addTask","event","formState","preventDefault","sortBids","task","sorted","bids","sort","a","b","price","console","log","contractor","CardExampleLinkCard","description","componentDidMount","fetch","then","res","json","setState","props","user","render","tasks","map","Math","floor","random","currentTask"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\nimport {Link} from 'react-router-dom'\nimport { Card, Feed } from 'semantic-ui-react'\n// import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\n\nexport default class extends React.Component {\n  state = {\n    specialties: [{id: 1, name: \"gardening\"},\n     {id: 2, name: \"capentry\"},\n     {id: 3, name: \"plumbing\"},\n     {id: 4, name: \"technology\"},\n     {id: 5, name: \"electrician\"} ],\n    currentUser: {}\n  };\n\n  componentDidMount() {\n    fetch(SPECIALTIES)\n      .then(res => res.json())\n      .then(specialties =>{\n      \n        this.setState({\n          currentUser: this.props.user\n        })\n        \n      });\n  }\n\n  addTask = (event, formState) => {\n    event.preventDefault();\n    // debugger\n    // let data = {\n    //   name: event.target.name.value,\n    //   description: event.target.description.value,\n    //   specialty_id: event.target.specialty.value,\n    //   user_id: this.props.user.id\n    // };\n    // event.target.reset();\n    // console.log(event);\n    // fetch(TASKS, {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(data)\n    // })\n    //   .then(res => res.json())\n    //   .then(currentUser =>\n    //     this.setState({\n    //       currentUser\n    //     })\n    //   );\n  };\n\n  sortBids = task => {\n    let sorted = task.bids.sort((a, b) => (a.price > b.price ? 1 : -1));\n   \n      console.log()\n    return sorted[0] ? `${sorted[0].price} by ${sorted[0].contractor.name}` : '  No Bids Yet'\n  };\n\n  CardExampleLinkCard = (task) => (\n    <Card\n      \n      href={`/task/${task.id}`}\n      header={task.name}\n      meta='Friend'\n      description={task.description}\n    />\n  )\n\n  render() {\n   \n    return (\n      <div >\n        <div>\n          Hi, {this.state.currentUser ? this.state.currentUser.name : null}\n        </div>\n        <NewTaskForm\n          specialties={this.state.specialties}\n          addTask={this.addTask}\n        />\n        <div >\n          Current Tasks{\" \"}\n          <br /><br />\n          {!isEmpty(this.state.currentUser)\n            ? \n              this.state.currentUser.tasks.map(task => { \n              return  <div  key={Math.floor((Math.random() * 100000000000) + 1)} onClick={() => this.props.currentTask(task)}>\n         { this.CardExampleLinkCard(task)}\n              </div>})\n              \n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}