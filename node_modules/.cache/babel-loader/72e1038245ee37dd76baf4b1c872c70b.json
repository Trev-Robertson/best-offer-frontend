{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorProfileContainer.js\";\nimport React from \"react\";\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'; // import store from '../redux/store'\n\nimport ContractorProfile from '../components/ContractorProfile';\nimport ContractorTaskShowPage from \"../components/ContractorTaskShowPage\";\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nexport default class ContractorProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.state = {\n      anyBidsSelected: false,\n      sortedBids: [],\n      currentTask: []\n    };\n\n    this.componentDidMount = () => {\n      debugger;\n      fetch(TASKS + this.props.routerProps.match.params.id).then(res => res.json()).then(task => {\n        if (!task.error) {\n          let sortedBids = this.sortBids(task.bids);\n          this.setState({\n            currentTask: task,\n            sortedBids: sortedBids\n          });\n          task.bids.forEach(bid => {\n            if (bid.status) {\n              this.setState({\n                anyBidsSelected: true\n              });\n            }\n          });\n        } else {\n          return React.createElement(Redirect, {\n            to: \"/opentasks\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n        }\n      });\n    };\n\n    this.sortBids = bids => {\n      let sorted = bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted[0];\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/task/:id\"),\n      render: routerProps => {\n        debugger; // let taskObj = this.props.contractor.bids.find(\n        //   bid => bid.task.id == props.match.params.id\n        // )\n\n        return React.createElement(ContractorTaskShowPage, {\n          id: routerProps.match.params.id,\n          contractor: this.props.contractor,\n          makeABid: this.props.makeABid,\n          contractorDeleteBid: this.props.contractorDeleteBid,\n          routerProps: routerProps,\n          anyBidsSelected: this.state.anyBidsSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url),\n      render: routerProps => {\n        return React.createElement(ContractorProfile, {\n          contractor: this.props.contractor,\n          routerProps: routerProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorProfileContainer.js"],"names":["React","Button","Header","Icon","Modal","ContractorProfile","ContractorTaskShowPage","BrowserRouter","Router","Route","Switch","Redirect","ContractorProfileContainer","Component","state","anyBidsSelected","sortedBids","currentTask","componentDidMount","fetch","TASKS","props","routerProps","match","params","id","then","res","json","task","error","sortBids","bids","setState","forEach","bid","status","sorted","sort","a","b","price","render","url","contractor","makeABid","contractorDeleteBid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\n// import store from '../redux/store'\nimport ContractorProfile from '../components/ContractorProfile'\nimport ContractorTaskShowPage from \"../components/ContractorTaskShowPage\";\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\n\n\nexport default class ContractorProfileContainer extends React.Component {\n  state = {\n    \n  };\n\n  state = {\n    anyBidsSelected: false,\n    sortedBids: [],\n    currentTask: []\n  };\n\n3\n\n\n  componentDidMount = () => {\n   debugger\n    fetch(TASKS + this.props.routerProps.match.params.id)\n    .then(res => res.json())\n    .then(task => {\n      \n        if(!task.error){\n      let sortedBids = this.sortBids(task.bids)\n      this.setState({\n        currentTask: task, \n        sortedBids: sortedBids,\n        \n      })\n      task.bids.forEach(bid => {\n      if (bid.status) {\n        this.setState({\n          anyBidsSelected: true\n        })\n      }\n    }) }\n    else{\n      return <Redirect to=\"/opentasks\" />\n    }\n\n  })\n  ;\n  };\n\n  sortBids = (bids) => {\n\n    let sorted = bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    \n    return sorted[0];\n  };\n\n\n\n  render() {\n    \n    return (\n      <div>\n        {/* <ContractorProfile contractor={this.props.contractor}/> */}\n\n        <Route\n          exact\n          path={`${this.props.match.url}/task/:id`}\n          render={routerProps => { \n            debugger\n            // let taskObj = this.props.contractor.bids.find(\n            //   bid => bid.task.id == props.match.params.id\n            // )\n      \n            \n            return <ContractorTaskShowPage \n            id={routerProps.match.params.id}\n            contractor={this.props.contractor}\n            makeABid={this.props.makeABid}\n            contractorDeleteBid={this.props.contractorDeleteBid}\n            routerProps={routerProps}\n            anyBidsSelected={this.state.anyBidsSelected}\n            />\n          }}\n        />\n\n        <Route\n          exact\n          path={`${this.props.match.url}`}\n          render={(routerProps) => {\n            \n           return <ContractorProfile contractor={this.props.contractor} routerProps={routerProps}/>\n            }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}