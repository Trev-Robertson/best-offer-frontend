{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js\";\nimport React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class ContractorTaskShowPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anyBidsSelected: false,\n      sortedBids: []\n    };\n\n    this.sortBids = bids => {\n      debugger;\n      let sorted = bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n\n    this.bidAccepted = bid => {\n      this.setState({\n        anyBidsSelected: true\n      }, () => this.props.acceptBid(bid, this.props.task));\n    };\n\n    this.bidDeclined = bid => {\n      if (bid.status) {\n        this.setState({\n          anyBidsSelected: false\n        }, () => this.props.deleteBid(bid));\n      } else {\n        this.props.deleteBid(bid);\n      }\n    };\n\n    this.componentDidMount = () => {\n      fetch(TASKS + this.props.id).then(res => res.json()).then(task => {\n        console.log(task);\n        task.bids.forEach(bid => {\n          if (bid.status) {\n            this.setState({\n              anyBidsSelected: true\n            });\n            return true;\n          }\n        });\n        this.setState({\n          sortedBids: this.sortBids(task.bids)\n        });\n      });\n    };\n\n    this.CardExampleGroups = (bid, index) => {\n      return React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        href: \"/contractors/\".concat(bid.contractor.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Image, {\n        floated: \"right\",\n        size: \"mini\",\n        src: bid.contractor.img_url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, index === 0 && !this.state.anyBidsSelected ? \"Best Value!\" : null), bid.status ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Congrats!!!!! You selected this bid!\") : null, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, bid.contractor.name), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, bid.status ? \"Winning Bid: $\".concat(bid.price) : \"Top Contractor!\"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, bid.contractor.name, \" Pick Me!\")), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, !bid.status ? React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: this.state.anyBidsSelected,\n        onClick: () => this.bidAccepted(bid),\n        basic: true,\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Accept bid of $\", bid.price), React.createElement(Button, {\n        disabled: bid.status ? true : null,\n        onClick: () => this.bidDeclined(bid),\n        basic: true,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.anyBidsSelected ? \"Delete Bid\" : \"Decline Bid\")) : null)));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Title:\", \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.task.name)), \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.task.description), \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Bids:\"), React.createElement(\"div\", {\n      className: \"bids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.so.map((bid, index) => React.createElement(\"div\", {\n      key: Math.floor(Math.random() * 100000000000 + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \" \", this.CardExampleGroups(bid, index)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js"],"names":["React","Button","Card","Image","Link","TASKS","ContractorTaskShowPage","Component","state","anyBidsSelected","sortedBids","sortBids","bids","sorted","sort","a","b","price","bidAccepted","bid","setState","props","acceptBid","task","bidDeclined","status","deleteBid","componentDidMount","fetch","id","then","res","json","console","log","forEach","CardExampleGroups","index","contractor","img_url","name","render","description","so","map","Math","floor","random"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nconst TASKS = \"http://localhost:3000/tasks/\"\n\nexport default class ContractorTaskShowPage extends React.Component {\n  state = {\n    anyBidsSelected: false,\n    sortedBids: []\n  };\n\n  sortBids = (bids) => {\n    debugger\n    let sorted = bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    return sorted;\n  };\n\n  bidAccepted = bid => {\n    this.setState(\n      {\n        anyBidsSelected: true\n      },\n      () => this.props.acceptBid(bid, this.props.task)\n    );\n  };\n\n  bidDeclined = bid => {\n    if (bid.status) {\n      this.setState(\n        {\n          anyBidsSelected: false\n        },\n        () => this.props.deleteBid(bid)\n      );\n    } else {\n      this.props.deleteBid(bid);\n    }\n  };\n\n  componentDidMount = () => {\n\n    fetch(TASKS + this.props.id)\n    .then(res => res.json())\n    .then(task => {\n      console.log(task)\n      task.bids.forEach(bid => {\n      if (bid.status) {\n        this.setState({\n          anyBidsSelected: true\n        });\n        return true;\n      }\n    });\n\n    this.setState({\n      sortedBids: this.sortBids(task.bids)\n    })\n  });\n  };\n\n  CardExampleGroups = (bid, index) => {\n    return (\n      <Card.Group>\n        <Card>\n          <Card.Content href={`/contractors/${bid.contractor.id}`}>\n            <Image floated=\"right\" size=\"mini\" src={bid.contractor.img_url} />\n            <h1>\n              {index === 0 && !this.state.anyBidsSelected\n                ? \"Best Value!\"\n                : null}\n            </h1>\n            {bid.status ? <h1>Congrats!!!!! You selected this bid!</h1> : null}\n            <Card.Header>{bid.contractor.name}</Card.Header>\n            <Card.Meta>\n              {bid.status ? `Winning Bid: $${bid.price}` : \"Top Contractor!\"}\n            </Card.Meta>\n            <Card.Description>{bid.contractor.name} Pick Me!</Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            {!bid.status ? (\n              <div className=\"ui two buttons\">\n                <Button\n                  disabled={this.state.anyBidsSelected}\n                  onClick={() => this.bidAccepted(bid)}\n                  basic\n                  color=\"blue\"\n                >\n                  Accept bid of ${bid.price}\n                </Button>\n                <Button\n                  disabled={bid.status ? true : null}\n                  onClick={() => this.bidDeclined(bid)}\n                  basic\n                  color=\"red\"\n                >\n                  {this.state.anyBidsSelected ? \"Delete Bid\" : \"Decline Bid\"}\n                </Button>\n              </div>\n            ) : null}\n          </Card.Content>\n        </Card>\n      </Card.Group>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Link to=\"/profile\">\n          {\" \"}\n        </Link>\n        <h1>\n          Title:{\" \"}\n          <h3>\n            <strong>{this.state.task.name}</strong>\n          </h3>{\" \"}\n        </h1>\n        <h1>\n          Description: <h3>{this.state.task.description}</h3>{\" \"}\n        </h1>\n        <h1>Bids:</h1>\n        <div className=\"bids\">\n          {this.state.so.map((bid, index) => (\n            <div key={Math.floor(Math.random() * 100000000000 + 1)}>\n              {\" \"}\n              {this.CardExampleGroups(bid, index)}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}