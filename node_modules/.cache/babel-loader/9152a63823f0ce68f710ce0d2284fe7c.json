{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js\";\nimport React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\"; // import {Link} from 'react-router-dom'\n\nimport { Card } from \"semantic-ui-react\"; // import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      specialties: [{\n        id: 1,\n        name: \"gardening\"\n      }, {\n        id: 2,\n        name: \"carpentry\"\n      }, {\n        id: 3,\n        name: \"plumbing\"\n      }, {\n        id: 4,\n        name: \"technology\"\n      }, {\n        id: 5,\n        name: \"electrician\"\n      }],\n      currentUser: {}\n    };\n\n    this.sortBids = task => {\n      let sorted = task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      console.log();\n      return sorted[0] ? \"Lowest Bid: $\".concat(sorted[0].price, \", by \").concat(sorted[0].contractor.name) : \"  No Bids Yet\";\n    };\n\n    this.CardExampleLinkCard = task => {\n      // debugger;\n      return React.createElement(Card, {\n        key: Math.floor(Math.random() * 100000000000 + 1),\n        color: \"blue\",\n        href: \"/task/\".concat(task.id),\n        header: task.name,\n        meta: task.specialty.name[0].toUpperCase() + task.specialty.name.slice(1),\n        description: \"Description: \".concat(task.description, \" \").concat(this.sortBids(task)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    };\n\n    this.doneTaskNames = () => {\n      let acceptBid = [];\n      this.state.currentUser.tasks.map(task => task.bids.map(bid => bid.status === true ? acceptBid.push(task) : bid));\n      return acceptBid;\n    };\n\n    this.notDoneTaskNames = () => {\n      let notDone = this.state.currentUser.tasks.slice(0);\n      debugger;\n      this.state.currentUser.tasks.map(task => {\n        task.bids.map(bid => {\n          bid.status !== true ? NotDone.push(task) : bid;\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentUser: this.props.user\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Hi, \", this.props.user ? this.props.user.name : null), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(NewTaskForm, {\n      specialties: this.state.specialties,\n      addTask: this.props.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Active Tasks:\"), React.createElement(\"div\", {\n      className: \"current-task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.notDoneTaskNames().map(task => {\n      return this.CardExampleLinkCard(task);\n    })) : null), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Accepted Bids:\"), React.createElement(\"div\", {\n      className: \"current-task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, !isEmpty(this.state.currentUser) ? React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.doneTaskNames().map(task => {\n      return this.CardExampleLinkCard(task);\n    })) : null)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js"],"names":["React","NewTaskForm","isEmpty","Card","TASKS","Component","state","specialties","id","name","currentUser","sortBids","task","sorted","bids","sort","a","b","price","console","log","contractor","CardExampleLinkCard","Math","floor","random","specialty","toUpperCase","slice","description","doneTaskNames","acceptBid","tasks","map","bid","status","push","notDoneTaskNames","notDone","NotDone","componentDidMount","setState","props","user","render","addTask"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\n// import {Link} from 'react-router-dom'\nimport { Card } from \"semantic-ui-react\";\n// import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst TASKS = \"http://localhost:3000/tasks/\";\n\nexport default class extends React.Component {\n  state = {\n    specialties: [\n      { id: 1, name: \"gardening\" },\n      { id: 2, name: \"carpentry\" },\n      { id: 3, name: \"plumbing\" },\n      { id: 4, name: \"technology\" },\n      { id: 5, name: \"electrician\" }\n    ],\n    currentUser: {}\n  };\n\n  componentDidMount() {\n    this.setState({\n      currentUser: this.props.user\n    });\n  }\n\n  sortBids = task => {\n    let sorted = task.bids.sort((a, b) => (a.price > b.price ? 1 : -1));\n\n    console.log();\n    return sorted[0]\n      ? `Lowest Bid: $${sorted[0].price}, by ${sorted[0].contractor.name}`\n      : \"  No Bids Yet\";\n  };\n\n  CardExampleLinkCard = task => {\n    // debugger;\n    return (\n      <Card\n        key={Math.floor(Math.random() * 100000000000 + 1)}\n        color=\"blue\"\n        href={`/task/${task.id}`}\n        header={task.name}\n        meta={\n          task.specialty.name[0].toUpperCase() + task.specialty.name.slice(1)\n        }\n        description={`Description: ${task.description} ${this.sortBids(task)}`}\n      />\n    );\n  };\n\n  doneTaskNames = () => {\n    let acceptBid = [];\n\n    this.state.currentUser.tasks.map(task =>\n      task.bids.map(bid => (bid.status === true ? acceptBid.push(task) : bid))\n    );\n\n    return acceptBid;\n  };\n\n  notDoneTaskNames = () => {\n    let notDone = this.state.currentUser.tasks.slice(0);\n    debugger\n\n    this.state.currentUser.tasks.map(task =>{\n       \n        task.bids.map(bid =>{ \n          \n          bid.status !== true ? NotDone.push(task) : bid\n        \n          })})\n\n}\n\n  render() {\n \n    return (\n      <div>\n        <div>\n          <br />\n          <div>\n            <div>\n              <h1> Hi, {this.props.user ? this.props.user.name : null}</h1>\n              <br />\n              <br />\n            </div>\n            <NewTaskForm\n              specialties={this.state.specialties}\n              addTask={this.props.addTask}\n            />\n          </div>\n          <div>\n            <h1>Active Tasks:</h1>\n            <div className=\"current-task\">\n              <br />\n              <br />\n              {!isEmpty(this.state.currentUser) ? (\n                <Card.Group>\n                  {this.notDoneTaskNames().map(task => {\n                    return this.CardExampleLinkCard(task);\n                  })}\n                </Card.Group>\n              ) : null}\n            </div>\n            <h1>Accepted Bids:</h1>\n            <div className=\"current-task\">\n              {!isEmpty(this.state.currentUser) ? (\n                <Card.Group>\n                  {this.doneTaskNames().map(task => {\n                    return this.CardExampleLinkCard(task);\n                  })}\n                </Card.Group>\n              ) : null}\n            </div>\n          </div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}