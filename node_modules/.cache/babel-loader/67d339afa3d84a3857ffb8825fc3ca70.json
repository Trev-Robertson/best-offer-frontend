{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js\";\nimport React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\"; // import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      specialties: [],\n      currentUser: {}\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.name.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.props.user.id\n      };\n      event.target.reset();\n      console.log(event);\n      fetch(TASKS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => this.setState({\n        currentUser\n      }));\n    };\n\n    this.sortBids = task => {\n      let sorted = task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted[0] ? sorted[0].price : '  No Bids Yet';\n    };\n  }\n\n  componentDidMount() {\n    fetch(SPECIALTIES).then(res => res.json()).then(specialties => this.setState({\n      specialties: specialties,\n      currentUser: this.props.user\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Hi, \", this.state.currentUser ? this.state.currentUser.name : null), React.createElement(NewTaskForm, {\n      specialties: this.state.specialties,\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Current Tasks\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? this.state.currentUser.tasks.map(task => React.createElement(\"div\", {\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" \", \"Job: \", task.name, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" Description: \", task.description, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \"Current Lowest Bid:\", this.sortBids(task), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))) : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js"],"names":["React","NewTaskForm","isEmpty","SPECIALTIES","TASKS","Component","state","specialties","currentUser","addTask","event","preventDefault","data","name","target","value","description","specialty_id","specialty","user_id","props","user","id","reset","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","setState","sortBids","task","sorted","bids","sort","a","b","price","componentDidMount","render","tasks","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\n// import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\n\nexport default class extends React.Component {\n  state = {\n    specialties: [],\n    currentUser: {}\n  };\n\n  componentDidMount() {\n    fetch(SPECIALTIES)\n      .then(res => res.json())\n      .then(specialties =>\n        this.setState({\n          specialties: specialties,\n          currentUser: this.props.user\n        })\n      );\n  }\n\n  addTask = event => {\n    event.preventDefault();\n    let data = {\n      name: event.target.name.value,\n      description: event.target.description.value,\n      specialty_id: event.target.specialty.value,\n      user_id: this.props.user.id\n    };\n    event.target.reset();\n    console.log(event);\n    fetch(TASKS, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser =>\n        this.setState({\n          currentUser\n        })\n      );\n  };\n\n  sortBids = task => {\n    let sorted = task.bids.sort((a, b) => (a.price > b.price ? 1 : -1));\n   \n  \n    return sorted[0] ? sorted[0].price : '  No Bids Yet'\n  };\n\n  render() {\n    return (\n      <div className=\"columns\">\n        <div className=\"column\">\n          Hi, {this.state.currentUser ? this.state.currentUser.name : null}\n        </div>\n        <NewTaskForm\n          specialties={this.state.specialties}\n          addTask={this.addTask}\n        />\n        <div className=\"column\">\n          Current Tasks{\" \"}\n          <br /><br />\n          {!isEmpty(this.state.currentUser)\n            ? this.state.currentUser.tasks.map(task =>  \n            <div key={task.id} >\n                  {\" \"}\n                  Job: {task.name}\n                  <br /> Description: {task.description} <br />\n                   Current Lowest Bid:{this.sortBids(task)}\n                   <br /><br /><br />\n                </div>\n              )\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}