{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport ContractorProfileContainer from \"./containers/ContractorProfileContainer\";\nimport ContractorsContainer from \"./containers/ContractorsContainer\";\nimport TaskShowPage from \"./components/TaskShowPage\"; // import ContractorShowPage from \"./components/ContractorShowPage\"\n\nimport { isEmpty } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"; // import ContractorShowPage from \"./components/ContractorShowPage\";\n\nconst specialties = [\"gardening\", \"plumbing\", \"technology\", \"electrician\", \"carpentry\"];\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst CONTRACTOR_URL = \"http://localhost:3000/api/v1/login/contractors\";\nconst PROFILE_URL = \"http://localhost:3000/api/v1/profile/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: {},\n      loading: true,\n      removeTask: true,\n      tasks: {},\n      currentContractor: {}\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        currentUser: user,\n        loading: false,\n        tasks: user.tasks,\n        currentContractor: {}\n      });\n    };\n\n    this.refreshContractor = user => {\n      this.setState({\n        currentContractor: user,\n        loading: false,\n        currentUser: {}\n      });\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.setState({\n        currentUser: {},\n        currentContractor: {}\n      });\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        fetch(localStorage.getItem(\"contractor\") ? CONTRACTOR_URL : PROFILE_URL, {\n          headers: {\n            Authentication: \"Bearer \".concat(localStorage.getItem(\"token\"))\n          }\n        }).then(res => res.json()).then(res => {\n          localStorage.getItem(\"contractor\") ? this.refreshContractor(res) : this.updateUser(res);\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleUser = (event, newUser, contractors) => {\n      event.preventDefault();\n      let contractor;\n\n      if (contractors) {\n        contractor = \"contractor\";\n      }\n\n      let data = {\n        name: event.target.name.value,\n        password: event.target.password.value,\n        new_user: newUser\n      };\n      fetch(URL + (contractors ? contractor : \"\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.authenticated && contractor == \"contractor\") {\n          localStorage.setItem(\"token\", data.token);\n          localStorage.setItem(\"contractor\", true);\n          this.setState({\n            currentContractor: JSON.parse(data.user),\n            currentUser: {}\n          });\n        } else {\n          if (data.authenticated) {\n            localStorage.setItem(\"contractor\", false);\n            localStorage.setItem(\"token\", data.token);\n            this.setState({\n              currentUser: JSON.parse(data.user),\n              currentContractor: {}\n            });\n          }\n        }\n      });\n    };\n\n    this.acceptBid = (bid, task) => {\n      if (!bid.status) {\n        let data = {\n          task: {\n            id: task.id,\n            task_done: true,\n            user_id: this.state.currentUser.id,\n            bids_attributes: {\n              id: bid.id,\n              status: true\n            }\n          }\n        };\n        fetch(\"http://localhost:3000/tasks/\".concat(task.id), {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }).then(res => res.json()).then(currentUser => this.setState({\n          currentUser\n        }));\n      }\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.headline.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.state.currentUser.id\n      };\n      event.target.reset();\n      fetch(TASKS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        console.log(\"end\", currentUser);\n        let updateUser = this.state.currentUser;\n        updateUser.tasks = currentUser.tasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n    };\n\n    this.deleteBid = bid => {\n      let data = {\n        id: bid.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/bids/\".concat(bid.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        this.updateUser(currentUser);\n      });\n    };\n\n    this.deleteTask = task => {\n      let data = {\n        id: task.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/tasks/\".concat(task.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(updatedUser => {\n        let updateUser = this.state.currentUser;\n        let currentUserTasks = updateUser.tasks.filter(t => t.id !== task.id);\n        updateUser.tasks = currentUserTasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: \"50vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"BEST OFFER OR ELSE\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, !isEmpty(this.state.currentUser) ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"To Profile Page\")), React.createElement(Link, {\n      to: \"/contractors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"View Contractors\")), React.createElement(\"button\", {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Logout\")) : null), !this.state.loading ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login/contractor\",\n      render: props => {\n        debugger;\n        return !isEmpty(this.state.currentContractor) ? React.createElement(Redirect, {\n          to: \"/contractor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }) : React.createElement(Login, {\n          handleUser: this.handleUser,\n          newUser: false,\n          contractor: true,\n          routerProps: props,\n          contractor: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        newUser: false,\n        contractor: false,\n        routerProps: props,\n        contractor: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup/contractor\",\n      render: props => !isEmpty(this.state.currentContractor) ? React.createElement(Redirect, {\n        to: \"/contractor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        newUser: false,\n        contractor: true,\n        routerProps: props,\n        newUser: true,\n        contractor: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        newUser: true,\n        routerProps: props,\n        contractor: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? React.createElement(Route, {\n      exact: true,\n      path: \"/task/:id\",\n      render: props => {\n        let taskObj = this.state.currentUser.tasks.find(task => task.id == props.match.params.id);\n        return !isEmpty(taskObj) ? React.createElement(TaskShowPage, {\n          task: taskObj,\n          acceptBid: this.acceptBid,\n          deleteBid: this.deleteBid,\n          deleteTask: this.deleteTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }) : React.createElement(Redirect, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: () => !isEmpty(this.state.currentUser) ? React.createElement(ProfileContainer, {\n        user: this.state.currentUser,\n        specialties: specialties,\n        tasks: this.state.tasks,\n        addTask: this.addTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/contractor\",\n      render: () => {\n        return !isEmpty(this.state.currentContractor) ? React.createElement(ContractorProfileContainer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }) : React.createElement(Redirect, {\n          to: \"/login/contractor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/contractors\",\n      render: routerProps => {\n        return React.createElement(ContractorsContainer, Object.assign({\n          user: this.state.currentUser,\n          specialties: specialties,\n          currentTask: this.currentTask\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js"],"names":["React","Login","ProfileContainer","ContractorProfileContainer","ContractorsContainer","TaskShowPage","isEmpty","Link","BrowserRouter","Router","Route","Switch","Redirect","specialties","URL","CONTRACTOR_URL","PROFILE_URL","TASKS","App","Component","state","currentUser","loading","removeTask","tasks","currentContractor","updateUser","user","setState","refreshContractor","logout","localStorage","clear","componentDidMount","getItem","fetch","headers","Authentication","then","res","json","handleUser","event","newUser","contractors","preventDefault","contractor","data","name","target","value","password","new_user","method","body","JSON","stringify","console","log","authenticated","setItem","token","parse","acceptBid","bid","task","status","id","task_done","user_id","bids_attributes","addTask","headline","description","specialty_id","specialty","reset","deleteBid","deleteTask","updatedUser","currentUserTasks","filter","t","render","height","props","taskObj","find","match","params","routerProps","currentTask"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport ContractorProfileContainer from \"./containers/ContractorProfileContainer\";\nimport ContractorsContainer from \"./containers/ContractorsContainer\";\nimport TaskShowPage from \"./components/TaskShowPage\";\n// import ContractorShowPage from \"./components/ContractorShowPage\"\nimport { isEmpty } from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n// import ContractorShowPage from \"./components/ContractorShowPage\";\nconst specialties = [\n  \"gardening\",\n  \"plumbing\",\n  \"technology\",\n  \"electrician\",\n  \"carpentry\"\n];\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst CONTRACTOR_URL = \"http://localhost:3000/api/v1/login/contractors\";\nconst PROFILE_URL = \"http://localhost:3000/api/v1/profile/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\n\nexport default class App extends React.Component {\n  state = {\n    currentUser: {},\n    loading: true,\n    removeTask: true,\n    tasks: {},\n    currentContractor: {}\n  };\n\n  updateUser = user => {\n    this.setState({\n      currentUser: user,\n      loading: false,\n      tasks: user.tasks,\n      currentContractor: {}\n    });\n  };\n\n  refreshContractor = user => {\n    this.setState({\n      currentContractor: user,\n      loading: false,\n      currentUser: {}\n    });\n  };\n\n  logout = () => {\n    localStorage.clear();\n    this.setState({\n      currentUser: {},\n      currentContractor: {}\n    });\n  };\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"token\")) {\n  \n      fetch((localStorage.getItem(\"contractor\") ? CONTRACTOR_URL : PROFILE_URL ), {\n        headers: { Authentication: `Bearer ${localStorage.getItem(\"token\")}` }\n      })\n        .then(res => res.json())\n        .then(res => {\n         \n          localStorage.getItem(\"contractor\")\n            ? this.refreshContractor(res)\n            : this.updateUser(res);\n        });\n    } else {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleUser = (event, newUser, contractors) => {\n    event.preventDefault();\n    let contractor;\n    if (contractors) {\n      contractor = \"contractor\";\n    }\n\n    let data = {\n      name: event.target.name.value,\n      password: event.target.password.value,\n      new_user: newUser\n    };\n\n    fetch(URL + (contractors ? contractor : \"\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n\n        if (data.authenticated && contractor == \"contractor\") {\n          localStorage.setItem(\"token\", data.token);\n          localStorage.setItem(\"contractor\", true);\n\n          this.setState({\n            currentContractor: JSON.parse(data.user),\n            currentUser: {}\n          });\n        } else {\n          if (data.authenticated) {\n            localStorage.setItem(\"contractor\", false);\n            localStorage.setItem(\"token\", data.token);\n            this.setState({\n              currentUser: JSON.parse(data.user),\n              currentContractor: {}\n            });\n          }\n        }\n      });\n  };\n\n  acceptBid = (bid, task) => {\n    if (!bid.status) {\n      let data = {\n        task: {\n          id: task.id,\n          task_done: true,\n          user_id: this.state.currentUser.id,\n          bids_attributes: {\n            id: bid.id,\n            status: true\n          }\n        }\n      };\n\n      fetch(`http://localhost:3000/tasks/${task.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      })\n        .then(res => res.json())\n        .then(currentUser => this.setState({ currentUser }));\n    }\n  };\n\n  addTask = event => {\n    event.preventDefault();\n    let data = {\n      name: event.target.headline.value,\n      description: event.target.description.value,\n      specialty_id: event.target.specialty.value,\n      user_id: this.state.currentUser.id\n    };\n    event.target.reset();\n\n    fetch(TASKS, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser => {\n        console.log(\"end\", currentUser);\n        let updateUser = this.state.currentUser;\n        updateUser.tasks = currentUser.tasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n  };\n\n  deleteBid = bid => {\n    let data = {\n      id: bid.id,\n      user_id: this.state.currentUser.id\n    };\n    fetch(`http://localhost:3000/bids/${bid.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser => {\n        this.updateUser(currentUser);\n      });\n  };\n\n  deleteTask = task => {\n    let data = {\n      id: task.id,\n      user_id: this.state.currentUser.id\n    };\n    fetch(`http://localhost:3000/tasks/${task.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(updatedUser => {\n        let updateUser = this.state.currentUser;\n        let currentUserTasks = updateUser.tasks.filter(t => t.id !== task.id);\n        updateUser.tasks = currentUserTasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\" style={{ height: \"50vh\" }}>\n        <h1>BEST OFFER OR ELSE</h1>\n        <p>\n          {!isEmpty(this.state.currentUser) ? (\n            <React.Fragment>\n              <Link to=\"/profile\">\n                {\" \"}\n                <button>To Profile Page</button>\n              </Link>\n              <Link to=\"/contractors\">\n                {\" \"}\n                <button>View Contractors</button>\n              </Link>\n              <button onClick={this.logout}>Logout</button>\n            </React.Fragment>\n          ) : null}\n        </p>\n        {!this.state.loading ? (\n          <Switch>\n           \n            <Route\n             exact\n              path=\"/login/contractor\"\n              render={props => {\n                debugger\n              return !isEmpty(this.state.currentContractor) ? (\n                  <Redirect to=\"/contractor\" />\n                ) : \n                   <Login\n                    handleUser={this.handleUser}\n                    newUser={false}\n                    contractor={true}\n                    routerProps={props}\n                    contractor={true}\n                  />\n                \n              }}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={props =>\n                !isEmpty(this.state.currentUser) ? (\n                  <Redirect to=\"/profile\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    newUser={false}\n                    contractor={false}\n                    routerProps={props}\n                    contractor={false}\n                  />\n                )\n              }\n            />\n\n\n            <Route\n              path=\"/signup/contractor\"\n              render={props =>\n                !isEmpty(this.state.currentContractor) ? (\n                  <Redirect to=\"/contractor\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    newUser={false}\n                    contractor={true}\n                    routerProps={props}\n                    newUser={true}\n                    contractor={true}\n                  />\n                )\n              }\n            />\n\n            <Route\n              exact\n              path=\"/signup\"\n              render={props =>\n                !isEmpty(this.state.currentUser) ? (\n                  <Redirect to=\"/profile\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    newUser={true}\n                    routerProps={props}\n                    contractor={false}\n                  />\n                )\n              }\n            />\n\n            {!isEmpty(this.state.currentUser) ? (\n              <Route\n                exact\n                path=\"/task/:id\"\n                render={props => {\n                  let taskObj = this.state.currentUser.tasks.find(\n                    task => task.id == props.match.params.id\n                  );\n                  return !isEmpty(taskObj) ? (\n                    <TaskShowPage\n                      task={taskObj}\n                      acceptBid={this.acceptBid}\n                      deleteBid={this.deleteBid}\n                      deleteTask={this.deleteTask}\n                    />\n                  ) : (\n                    <Redirect to=\"/profile\" />\n                  );\n                }}\n              />\n            ) : (\n              <Redirect to=\"/login\" />\n            )}\n\n            <Route\n              exact\n              path=\"/profile\"\n              render={() =>\n                !isEmpty(this.state.currentUser) ? (\n                  <ProfileContainer\n                    user={this.state.currentUser}\n                    specialties={specialties}\n                    tasks={this.state.tasks}\n                    addTask={this.addTask}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                )\n              }\n            />\n\n            <Route\n              exact\n              path=\"/contractor\"\n              render={() => {\n               return !isEmpty(this.state.currentContractor) ? (\n                  <ContractorProfileContainer />\n                ) : (\n                  <Redirect to=\"/login/contractor\" />\n                )\n              }}\n            />\n\n            <Route\n              path=\"/contractors\"\n              render={routerProps => {\n                return (\n                  <ContractorsContainer\n                    user={this.state.currentUser}\n                    specialties={specialties}\n                    currentTask={this.currentTask}\n                    {...routerProps}\n                  />\n                );\n              }}\n            />\n\n            <Route path=\"/\" render={() => <Redirect to=\"/login\" />} />\n          </Switch>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}