{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js\";\nimport React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\"; // import {Link} from 'react-router-dom'\n\nimport { Card } from \"semantic-ui-react\"; // import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      specialties: [{\n        id: 1,\n        name: \"gardening\"\n      }, {\n        id: 2,\n        name: \"capentry\"\n      }, {\n        id: 3,\n        name: \"plumbing\"\n      }, {\n        id: 4,\n        name: \"technology\"\n      }, {\n        id: 5,\n        name: \"electrician\"\n      }],\n      currentUser: {}\n    };\n\n    this.addTask = (event, formState) => {\n      event.preventDefault();\n      let data = {\n        name: event.target.headline.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.props.user.id\n      };\n      event.target.reset();\n      console.log(event);\n      fetch(TASKS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => this.setState({\n        currentUser\n      }));\n    };\n\n    this.sortBids = task => {\n      let sorted = task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      console.log();\n      return sorted[0] ? \"Lowest Bid: $\".concat(sorted[0].price, \", by \").concat(sorted[0].contractor.name) : \"  No Bids Yet\";\n    };\n\n    this.CardExampleLinkCard = task => React.createElement(Card, {\n      color: \"blue\",\n      href: \"/task/\".concat(task.id),\n      header: task.name,\n      meta: task.specialty.name[0].toUpperCase() + task.specialty.name.slice(1),\n      description: \"Description: \".concat(task.description, \" \").concat(this.sortBids(task)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      currentUser: this.props.user\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" Hi, \", this.props.user ? this.props.user.name : null), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(NewTaskForm, {\n      specialties: this.state.specialties,\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Current Tasks:\"), React.createElement(\"div\", {\n      className: \"current-task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? this.state.currentUser.tasks.map(task => {\n      return React.createElement(\"div\", {\n        key: Math.floor(Math.random() * 100000000000 + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.CardExampleLinkCard(task));\n    }) : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js"],"names":["React","NewTaskForm","isEmpty","Card","TASKS","Component","state","specialties","id","name","currentUser","addTask","event","formState","preventDefault","data","target","headline","value","description","specialty_id","specialty","user_id","props","user","reset","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","setState","sortBids","task","sorted","bids","sort","a","b","price","contractor","CardExampleLinkCard","toUpperCase","slice","componentDidMount","render","tasks","map","Math","floor","random"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\n// import {Link} from 'react-router-dom'\nimport { Card } from \"semantic-ui-react\";\n// import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst TASKS = \"http://localhost:3000/tasks/\";\n\nexport default class extends React.Component {\n  state = {\n    specialties: [\n      { id: 1, name: \"gardening\" },\n      { id: 2, name: \"capentry\" },\n      { id: 3, name: \"plumbing\" },\n      { id: 4, name: \"technology\" },\n      { id: 5, name: \"electrician\" }\n    ],\n    currentUser: {}\n  };\n\n  componentDidMount() {\n    this.setState({\n      currentUser: this.props.user\n    });\n  }\n\n  addTask = (event, formState) => {\n    event.preventDefault();\n    let data = {\n      name: event.target.headline.value,\n      description: event.target.description.value,\n      specialty_id: event.target.specialty.value,\n      user_id: this.props.user.id\n    };\n    event.target.reset();\n    console.log(event);\n    fetch(TASKS, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser =>\n        this.setState({\n          currentUser\n        })\n      );\n  };\n\n  sortBids = task => {\n    let sorted = task.bids.sort((a, b) => (a.price > b.price ? 1 : -1));\n\n    console.log();\n    return sorted[0]\n      ? `Lowest Bid: $${sorted[0].price}, by ${sorted[0].contractor.name}`\n      : \"  No Bids Yet\";\n  };\n\n  CardExampleLinkCard = task => (\n    <Card\n      color=\"blue\"\n      href={`/task/${task.id}`}\n      header={task.name}\n      meta={task.specialty.name[0].toUpperCase() + task.specialty.name.slice(1)}\n      description={`Description: ${task.description} ${this.sortBids(task)}`}\n    />\n  );\n\n  render() {\n    return (\n      <div>\n        <div>\n          <h1> Hi, {this.props.user ? this.props.user.name : null}</h1>\n          <br />\n          <br />\n        </div>\n        <NewTaskForm\n          specialties={this.state.specialties}\n          addTask={this.addTask}\n        />\n        <br />\n        <h1>Current Tasks:</h1>\n        <div className=\"current-task\">\n          <br />\n          <br />\n          {!isEmpty(this.state.currentUser)\n            ? this.state.currentUser.tasks.map(task => {\n                return (\n                  <div key={Math.floor(Math.random() * 100000000000 + 1)}>\n                    {this.CardExampleLinkCard(task)}\n                  </div>\n                );\n              })\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}