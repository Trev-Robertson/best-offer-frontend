{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorProfileContainer.js\";\nimport React from \"react\"; // import store from '../redux/store'\n\nimport ContractorProfile from '../components/ContractorProfile';\nexport default class ContractorProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(ContractorProfile, {\n      contractor: this.props.contractor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/tasks:id\"),\n      render: props => {\n        let contractorObj = this.state.allContractors.find(task => task.id == props.match.params.id);\n        return !isEmpty(contractorObj) ? React.createElement(ContractorShowPage, {\n          contractor: contractorObj,\n          addNewReview: this.addNewReview,\n          user: this.props.user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }) : null;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url),\n      render: () => React.createElement(ContractorProfile, {\n        contractor: this.props.contractor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorProfileContainer.js"],"names":["React","ContractorProfile","ContractorProfileContainer","Component","state","render","props","contractor","match","url","contractorObj","allContractors","find","task","id","params","isEmpty","addNewReview","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,eAAe,MAAMC,0BAAN,SAAyCF,KAAK,CAACG,SAA/C,CAAyD;AAAA;AAAA;AAAA,SACtEC,KADsE,GAC9D,EAD8D;AAAA;;AAGtEC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAmB,MAAA,UAAU,EAAE,KAAKC,KAAL,CAAWC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAK,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,GAAtB,cAFN;AAGE,MAAA,MAAM,EAAEH,KAAK,IAAI;AACf,YAAII,aAAa,GAAG,KAAKN,KAAL,CAAWO,cAAX,CAA0BC,IAA1B,CAClBC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWR,KAAK,CAACE,KAAN,CAAYO,MAAZ,CAAmBD,EADpB,CAApB;AAIA,eAAO,CAACE,OAAO,CAACN,aAAD,CAAR,GACL,oBAAC,kBAAD;AACE,UAAA,UAAU,EAAEA,aADd;AAEE,UAAA,YAAY,EAAE,KAAKO,YAFrB;AAGE,UAAA,IAAI,EAAE,KAAKX,KAAL,CAAWY,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,GAMH,IANJ;AAOD,OAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAqBE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAK,KAAKZ,KAAL,CAAWE,KAAX,CAAiBC,GAAtB,CAFN;AAGE,MAAA,MAAM,EAAE,MACN,oBAAC,iBAAD;AAAmB,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF;AA+BD;;AApCqE","sourcesContent":["import React from \"react\";\n// import store from '../redux/store'\nimport ContractorProfile from '../components/ContractorProfile'\n\nexport default class ContractorProfileContainer extends React.Component {\n  state = {};\n\n  render() {\n    \n    return (\n      <div>\n        <ContractorProfile contractor={this.props.contractor}/>\n\n        <Route\n          exact\n          path={`${this.props.match.url}/tasks:id`}\n          render={props => {\n            let contractorObj = this.state.allContractors.find(\n              task => task.id == props.match.params.id\n            );\n\n            return !isEmpty(contractorObj) ? (\n              <ContractorShowPage\n                contractor={contractorObj}\n                addNewReview={this.addNewReview}\n                user={this.props.user}\n              />\n            ) : null;\n          }}\n        />\n\n        <Route\n          exact\n          path={`${this.props.match.url}`}\n          render={() => (\n            <ContractorProfile contractor={this.props.contractor}/>\n          )}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}