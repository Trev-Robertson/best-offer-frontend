{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js\";\nimport React from 'react';\nimport { Button, Card, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nexport default class TaskShowPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anyBidsSelected: false,\n      sortedBids: []\n    };\n\n    this.sortBids = () => {\n      let sorted = this.props.task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n\n    this.bidAccepted = bid => {\n      this.setState({\n        anyBidsSelected: true\n      }, () => this.props.acceptBid(bid));\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        sortedBids: this.sortBids().map(bid => bid.status)\n      });\n    };\n\n    this.CardExampleGroups = (bid, index) => {\n      return React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Image, {\n        floated: \"right\",\n        size: \"mini\",\n        src: \"/images/avatar/large/steve.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, index === 0 && !this.state.sortedBids.includes(true) ? 'Best Value!' : null), bid.status ? React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"You selected this bid!\") : null, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, bid.contractor.name), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Top Contractor! \"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, bid.contractor.name, \" Pick Me!\")), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: () => this.bid,\n        basic: true,\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Accept bid of $\", bid.price), React.createElement(Button, {\n        onClick: () => this.props.deleteBid(bid),\n        basic: true,\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Decline Bid\")))));\n      {\n        /* // <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n        //   ${bid.price} by <strong>{bid.contractor.name}</strong>\n        // </p>  */\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.props.toggleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"To Profile Page\")), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Title:\"), \" \", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.task.name)), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Description:\"), \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, this.props.task.description), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Bids:\"), React.createElement(\"div\", {\n      className: \"bids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.sortBids().map((bid, index) => React.createElement(\"div\", {\n      key: Math.floor(Math.random() * 100000000000 + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" \", this.CardExampleGroups(bid, index)))));\n  }\n\n} // this.CardExampleGroups(bid)","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js"],"names":["React","Button","Card","Image","Link","TaskShowPage","Component","state","anyBidsSelected","sortedBids","sortBids","sorted","props","task","bids","sort","a","b","price","bidAccepted","bid","setState","acceptBid","componentDidMount","map","status","CardExampleGroups","index","includes","contractor","name","deleteBid","render","toggleTask","description","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Card, Image } from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\n\n\n\n\n\nexport default class TaskShowPage extends React.Component {\n\n  state = {\n    anyBidsSelected : false,\n    sortedBids: []\n  }\n\n  sortBids = () => {\n    let sorted = this.props.task.bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    return sorted;\n  };\n\n\n  bidAccepted = (bid) => {\n    this.setState({\n      anyBidsSelected: true\n    },() => this.props.acceptBid(bid))\n  }\n\n\n  componentDidMount = () =>{\n\n    this.setState({\n      sortedBids: this.sortBids().map(bid => bid.status)\n    })\n  }\n\nCardExampleGroups = (bid, index) => {  \n\n return( \n <Card.Group>\n      <Card >\n        <Card.Content>\n          <Image\n            floated='right'\n            size='mini'\n            src='/images/avatar/large/steve.jpg'\n            />\n              <h1>{index === 0 && !this.state.sortedBids.includes(true) ? 'Best Value!': null}</h1>\n        {bid.status ? <h4>You selected this bid!</h4> :\n          null\n          }\n          <Card.Header>{bid.contractor.name}</Card.Header>\n          <Card.Meta>Top Contractor! </Card.Meta>\n          <Card.Description>\n          {bid.contractor.name} Pick Me!\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <div  className='ui two buttons'>\n            <Button onClick={() => this.bid} basic color='blue'>\n              Accept bid of ${bid.price}\n            </Button>\n            {\n            <Button onClick={() => this.props.deleteBid(bid)} basic color='red'>\n              Decline Bid\n            </Button >}\n          </div>\n        </Card.Content>\n      </Card>\n    </Card.Group>)\n   \n    {/* // <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n    //   ${bid.price} by <strong>{bid.contractor.name}</strong>\n    // </p>  */}\n}\n\n\n  render() {\n    \n    return (\n      <div onClick={this.props.toggleTask} >\n        <Link to='/profile'> <button>To Profile Page</button></Link>\n        <h1>Title:</h1> <h2><strong>{this.props.task.name}</strong></h2>\n        <h1>Description:</h1> <h3>{this.props.task.description}</h3>\n        <h1>Bids:</h1>\n        <div className='bids'>\n        {this.sortBids().map((bid, index) =>   <div  key={Math.floor((Math.random() * 100000000000) + 1)}> {this.CardExampleGroups(bid, index)}</div>)}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n// this.CardExampleGroups(bid)\n\n\n"]},"metadata":{},"sourceType":"module"}