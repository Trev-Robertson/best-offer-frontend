{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport ContractorProfileContainer from \"./containers/ContractorProfileContainer\";\nimport ContractorsContainer from \"./containers/ContractorsContainer\";\nimport TaskShowPage from \"./components/TaskShowPage\";\nimport AllOpenTasks from \"./components/AllOpenTasks\";\nimport EditProfile from \"./components/EditProfile.js\";\nimport { isEmpty } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\nconst link = {\n  width: \"100px\",\n  padding: \"12px\",\n  margin: \"0 6px 6px\",\n  background: \"blue\",\n  textDecoration: \"none\",\n  color: \"white\"\n};\nconst specialties = [\"gardening\", \"plumbing\", \"technology\", \"electrician\", \"carpentry\"];\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst CONTRACTOR_URL = \"http://localhost:3000/api/v1/contractor\";\nconst PROFILE_URL = \"http://localhost:3000/api/v1/profile/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nconst BIDS_URL = \"http://localhost:3000/bids/\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: {},\n      loading: true,\n      removeTask: true,\n      tasks: {},\n      currentContractor: {}\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        currentUser: user,\n        loading: false,\n        tasks: user.tasks,\n        currentContractor: {}\n      });\n    };\n\n    this.refreshContractor = user => {\n      this.setState({\n        currentContractor: user,\n        loading: false,\n        currentUser: {}\n      });\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.setState({\n        currentUser: {},\n        currentContractor: {}\n      });\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        fetch(localStorage.getItem(\"contractor\") === \"true\" ? CONTRACTOR_URL : PROFILE_URL, {\n          headers: {\n            Authentication: \"Bearer \".concat(localStorage.getItem(\"token\"))\n          }\n        }).then(res => res.json()).then(res => {\n          localStorage.getItem(\"contractor\") === \"true\" ? this.refreshContractor(res) : this.updateUser(res);\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleUser = (event, newUser, contractors, special) => {\n      debugger;\n      event.preventDefault();\n      let contractor;\n      let phoneNumber;\n\n      if (contractors) {\n        contractor = \"contractor\";\n      }\n\n      if (event.target.phone) {\n        phoneNumber = \"+1\" + event.target.phone.value;\n      }\n\n      let data = {\n        name: event.target.name.value,\n        password: event.target.password.value,\n        new_user: newUser,\n        phone_number: phoneNumber\n      };\n      fetch(URL + (contractors ? contractor : \"\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => {\n        if (data.authenticated && contractor === \"contractor\") {\n          localStorage.setItem(\"token\", data.token);\n          localStorage.setItem(\"contractor\", true);\n          this.setState({\n            currentContractor: JSON.parse(data.user),\n            currentUser: {}\n          });\n        } else {\n          if (data.authenticated) {\n            localStorage.setItem(\"contractor\", false);\n            localStorage.setItem(\"token\", data.token);\n            this.setState({\n              currentUser: JSON.parse(data.user),\n              currentContractor: {}\n            });\n          }\n        }\n      });\n    };\n\n    this.acceptBid = (bid, task) => {\n      if (!bid.status) {\n        let data = {\n          task: {\n            id: task.id,\n            task_done: true,\n            user_id: this.state.currentUser.id,\n            bids_attributes: {\n              id: bid.id,\n              status: true\n            }\n          }\n        };\n        fetch(\"http://localhost:3000/tasks/\".concat(task.id), {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }).then(res => res.json()).then(currentUser => this.setState({\n          currentUser\n        }));\n      }\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.headline.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.state.currentUser.id\n      };\n      event.target.reset();\n      fetch(TASKS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        console.log(\"end\", currentUser);\n        let updateUser = this.state.currentUser;\n        updateUser.tasks = currentUser.tasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n    };\n\n    this.deleteBid = bid => {\n      let data = {\n        id: bid.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/bids/\".concat(bid.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        this.updateUser(currentUser);\n      });\n    };\n\n    this.contractorDeleteBid = (event, bid, contractor) => {\n      let data = {\n        id: bid,\n        contractor_id: contractor.id\n      };\n      fetch(\"http://localhost:3000/contractor/bids/\".concat(bid.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentContractor => {\n        alert(\"Bid Successful!\");\n        console.log(currentContractor);\n        this.setState(_objectSpread({}, this.state, {\n          currentContractor\n        }));\n      });\n    };\n\n    this.deleteTask = task => {\n      let data = {\n        id: task.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/tasks/\".concat(task.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(updatedUser => {\n        let updateUser = this.state.currentUser;\n        let currentUserTasks = updateUser.tasks.filter(t => t.id !== task.id);\n        updateUser.tasks = currentUserTasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n    };\n\n    this.makeABid = (event, {\n      value\n    }, contractor, task) => {\n      event.preventDefault();\n      let currentBid = contractor.bids.find(bid => bid.task.id === task.id);\n\n      if (value >= 0 && value <= 999999) {\n        value = Math.round(value);\n        let data = {\n          price: value,\n          contractor_id: contractor.id,\n          task_id: task.id\n        };\n        fetch(BIDS_URL + (currentBid ? currentBid.id : \"\"), {\n          method: currentBid ? \"PATCH\" : \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }).then(res => res.json()).then(currentContractor => {\n          alert(\"Bid Successful!\");\n          console.log(currentContractor.bids);\n          this.setState(_objectSpread({}, this.state, {\n            currentContractor\n          }));\n        });\n      } else {\n        alert(\"Bid must be greater than zero, and a whole number and less than 1 million\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: \"50vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"BEST OFFER OR ELSE\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, !isEmpty(this.state.currentUser) ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      logout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })) : null, !isEmpty(this.state.currentContractor) ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      logout: this.logout,\n      contractor: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })) : null), !this.state.loading ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/opentasks\",\n      render: routerProps => {\n        return !isEmpty(this.state.currentContractor) ? React.createElement(AllOpenTasks, Object.assign({}, routerProps, {\n          contractor: this.state.currentContractor // task={taskObj}\n          // currentTask={this.currentTask}\n          ,\n          acceptBid: this.acceptBid,\n          contractorDeleteBid: this.contractorDeleteBid,\n          deleteTask: this.deleteTask,\n          makeABid: this.makeABid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login/contractor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/contractor\",\n      render: routerProps => {\n        return !isEmpty(this.state.currentContractor) ? React.createElement(ContractorProfileContainer, Object.assign({}, routerProps, {\n          contractor: this.state.currentContractor // task={taskObj}\n          // currentTask={this.currentTask}\n          ,\n          acceptBid: this.acceptBid,\n          contractorDeleteBid: this.contractorDeleteBid,\n          deleteTask: this.deleteTask,\n          makeABid: this.makeABid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login/contractor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/edit\",\n      render: routerProps => {\n        return !isEmpty(this.state.currentUser) ? React.createElement(EditProfile, Object.assign({}, routerProps, {\n          user: this.state.currentUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login/contractor\",\n      render: props => {\n        return !isEmpty(this.state.currentContractor) ? React.createElement(Redirect, {\n          to: \"/contractor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }) : React.createElement(Login, {\n          handleUser: this.handleUser,\n          newUser: false,\n          contractor: true,\n          routerProps: props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => {\n        return !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          },\n          __self: this\n        }) : React.createElement(Login, {\n          handleUser: this.handleUser,\n          newUser: false,\n          contractor: false,\n          routerProps: props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 399\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        newUser: true,\n        routerProps: props,\n        contractor: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: () => {\n        return !isEmpty(this.state.currentUser) ? React.createElement(ProfileContainer, {\n          user: this.state.currentUser,\n          specialties: specialties,\n          tasks: this.state.tasks,\n          addTask: this.addTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/contractors\",\n      render: routerProps => {\n        return !isEmpty(this.state.currentUser) ? React.createElement(ContractorsContainer, Object.assign({\n          user: this.state.currentUser,\n          specialties: specialties,\n          currentTask: this.currentTask\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup/contractor\",\n      render: props => !isEmpty(this.state.currentContractor) ? React.createElement(Redirect, {\n        to: \"/contractor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        contractor: true,\n        routerProps: props,\n        newUser: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? React.createElement(Route, {\n      exact: true,\n      path: \"/task/:id\",\n      render: props => {\n        let taskObj = this.state.currentUser.tasks.find(task => task.id == props.match.params.id);\n        return !isEmpty(taskObj) ? React.createElement(TaskShowPage, {\n          task: taskObj,\n          acceptBid: this.acceptBid,\n          deleteBid: this.deleteBid,\n          deleteTask: this.deleteTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 485\n          },\n          __self: this\n        }) : React.createElement(Redirect, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js"],"names":["React","Login","ProfileContainer","ContractorProfileContainer","ContractorsContainer","TaskShowPage","AllOpenTasks","EditProfile","isEmpty","Link","NavBar","BrowserRouter","Router","Route","NavLink","Switch","Redirect","link","width","padding","margin","background","textDecoration","color","specialties","URL","CONTRACTOR_URL","PROFILE_URL","TASKS","BIDS_URL","App","Component","state","currentUser","loading","removeTask","tasks","currentContractor","updateUser","user","setState","refreshContractor","logout","localStorage","clear","componentDidMount","getItem","fetch","headers","Authentication","then","res","json","handleUser","event","newUser","contractors","special","preventDefault","contractor","phoneNumber","target","phone","value","data","name","password","new_user","phone_number","method","body","JSON","stringify","authenticated","setItem","token","parse","acceptBid","bid","task","status","id","task_done","user_id","bids_attributes","addTask","headline","description","specialty_id","specialty","reset","console","log","deleteBid","contractorDeleteBid","contractor_id","alert","deleteTask","updatedUser","currentUserTasks","filter","t","makeABid","currentBid","bids","find","Math","round","price","task_id","render","height","routerProps","props","currentTask","taskObj","match","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport ContractorProfileContainer from \"./containers/ContractorProfileContainer\";\nimport ContractorsContainer from \"./containers/ContractorsContainer\";\nimport TaskShowPage from \"./components/TaskShowPage\";\nimport AllOpenTasks from \"./components/AllOpenTasks\";\nimport EditProfile from \"./components/EditProfile.js\"\n\nimport { isEmpty } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\n\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nconst link = {\n  width: \"100px\",\n  padding: \"12px\",\n  margin: \"0 6px 6px\",\n  background: \"blue\",\n  textDecoration: \"none\",\n  color: \"white\"\n};\n\nconst specialties = [\n  \"gardening\",\n  \"plumbing\",\n  \"technology\",\n  \"electrician\",\n  \"carpentry\"\n];\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst CONTRACTOR_URL = \"http://localhost:3000/api/v1/contractor\";\nconst PROFILE_URL = \"http://localhost:3000/api/v1/profile/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nconst BIDS_URL = \"http://localhost:3000/bids/\";\n\nexport default class App extends React.Component {\n  state = {\n    currentUser: {},\n    loading: true,\n    removeTask: true,\n    tasks: {},\n    currentContractor: {}\n  };\n\n  updateUser = user => {\n    this.setState({\n      currentUser: user,\n      loading: false,\n      tasks: user.tasks,\n      currentContractor: {}\n    });\n  };\n\n  refreshContractor = user => {\n    this.setState({\n      currentContractor: user,\n      loading: false,\n      currentUser: {}\n    });\n  };\n\n  logout = () => {\n    localStorage.clear();\n    this.setState({\n      currentUser: {},\n      currentContractor: {}\n    });\n  };\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"token\")) {\n      fetch(\n        localStorage.getItem(\"contractor\") === \"true\"\n          ? CONTRACTOR_URL\n          : PROFILE_URL,\n        {\n          headers: { Authentication: `Bearer ${localStorage.getItem(\"token\")}` }\n        }\n      )\n        .then(res => res.json())\n        .then(res => {\n          localStorage.getItem(\"contractor\") === \"true\"\n            ? this.refreshContractor(res)\n            : this.updateUser(res);\n        });\n    } else {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleUser = (event, newUser, contractors, special) => {\n    debugger\n    event.preventDefault();\n    let contractor;\n    let phoneNumber;\n    if (contractors) {\n      contractor = \"contractor\";\n    }\n    if(event.target.phone){\n     phoneNumber = \"+1\" + event.target.phone.value\n    }\n\n\n    let data = {\n      name: event.target.name.value,\n      password: event.target.password.value,\n      new_user: newUser,\n      phone_number: phoneNumber\n    };\n\n    fetch(URL + (contractors ? contractor : \"\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.authenticated && contractor === \"contractor\") {\n          localStorage.setItem(\"token\", data.token);\n          localStorage.setItem(\"contractor\", true);\n\n          this.setState({\n            currentContractor: JSON.parse(data.user),\n            currentUser: {}\n          });\n        } else {\n          if (data.authenticated) {\n            localStorage.setItem(\"contractor\", false);\n            localStorage.setItem(\"token\", data.token);\n            this.setState({\n              currentUser: JSON.parse(data.user),\n              currentContractor: {}\n            });\n          }\n        }\n      });\n  };\n\n  acceptBid = (bid, task) => {\n    if (!bid.status) {\n      let data = {\n        task: {\n          id: task.id,\n          task_done: true,\n          user_id: this.state.currentUser.id,\n          bids_attributes: {\n            id: bid.id,\n            status: true\n          }\n        }\n      };\n\n      fetch(`http://localhost:3000/tasks/${task.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      })\n        .then(res => res.json())\n        .then(currentUser => this.setState({ currentUser }));\n    }\n  };\n\n  addTask = event => {\n    event.preventDefault();\n    let data = {\n      name: event.target.headline.value,\n      description: event.target.description.value,\n      specialty_id: event.target.specialty.value,\n      user_id: this.state.currentUser.id\n    };\n    event.target.reset();\n\n    fetch(TASKS, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser => {\n        console.log(\"end\", currentUser);\n        let updateUser = this.state.currentUser;\n        updateUser.tasks = currentUser.tasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n  };\n\n  deleteBid = bid => {\n    let data = {\n      id: bid.id,\n      user_id: this.state.currentUser.id\n    };\n    fetch(`http://localhost:3000/bids/${bid.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser => {\n        this.updateUser(currentUser);\n      });\n  };\n\n  contractorDeleteBid = (event, bid, contractor) => {\n    let data = {\n      id: bid,\n      contractor_id: contractor.id\n    };\n\n    fetch(`http://localhost:3000/contractor/bids/${bid.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentContractor => {\n        alert(\"Bid Successful!\");\n        console.log(currentContractor);\n        this.setState({\n          ...this.state,\n          currentContractor\n        });\n      });\n  };\n\n  deleteTask = task => {\n    let data = {\n      id: task.id,\n      user_id: this.state.currentUser.id\n    };\n    fetch(`http://localhost:3000/tasks/${task.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(updatedUser => {\n        let updateUser = this.state.currentUser;\n        let currentUserTasks = updateUser.tasks.filter(t => t.id !== task.id);\n        updateUser.tasks = currentUserTasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n  };\n\n  makeABid = (event, { value }, contractor, task) => {\n    event.preventDefault();\n\n    let currentBid = contractor.bids.find(bid => bid.task.id === task.id);\n\n    if (value >= 0 && value <= 999999) {\n      value = Math.round(value);\n      let data = {\n        price: value,\n        contractor_id: contractor.id,\n        task_id: task.id\n      };\n\n      fetch(BIDS_URL + (currentBid ? currentBid.id : \"\"), {\n        method: currentBid ? \"PATCH\" : \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data)\n      })\n        .then(res => res.json())\n        .then(currentContractor => {\n          alert(\"Bid Successful!\");\n          console.log(currentContractor.bids);\n          this.setState({\n            ...this.state,\n            currentContractor\n          });\n        });\n    } else {\n      alert(\n        \"Bid must be greater than zero, and a whole number and less than 1 million\"\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\" style={{ height: \"50vh\" }}>\n        <h1>BEST OFFER OR ELSE</h1>\n        <p>\n          {!isEmpty(this.state.currentUser) ? (\n            <React.Fragment>\n              <NavBar logout={this.logout} />\n            </React.Fragment>\n          ) : null}\n          {!isEmpty(this.state.currentContractor) ? (\n            <React.Fragment>\n              <NavBar logout={this.logout} contractor={true} />\n            </React.Fragment>\n          ) : null}\n        </p>\n        {!this.state.loading ? (\n          <Switch>\n            <Route\n              path=\"/opentasks\"\n              render={routerProps => {\n                return !isEmpty(this.state.currentContractor) ? (\n                  <AllOpenTasks\n                    {...routerProps}\n                    contractor={this.state.currentContractor}\n                    // task={taskObj}\n                    // currentTask={this.currentTask}\n                    acceptBid={this.acceptBid}\n                    contractorDeleteBid={this.contractorDeleteBid}\n                    deleteTask={this.deleteTask}\n                    makeABid={this.makeABid}\n                  />\n                ) : (\n                  <Redirect to=\"/login/contractor\" />\n                );\n              }}\n            />\n\n            <Route\n              path=\"/contractor\"\n              render={routerProps => {\n                return !isEmpty(this.state.currentContractor) ? (\n                  <ContractorProfileContainer\n                    {...routerProps}\n                    contractor={this.state.currentContractor}\n                    // task={taskObj}\n                    // currentTask={this.currentTask}\n                    acceptBid={this.acceptBid}\n                    contractorDeleteBid={this.contractorDeleteBid}\n                    deleteTask={this.deleteTask}\n                    makeABid={this.makeABid}\n                  />\n                ) : (\n                  <Redirect to=\"/login/contractor\" />\n                );\n              }}\n            />\n            <Route\n              path=\"/edit\"\n              render={routerProps => {\n                return !isEmpty(this.state.currentUser) ? (\n                  <EditProfile\n                    {...routerProps}\n                    user={this.state.currentUser}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                );\n              }}\n            />\n\n            <Route\n              exact\n              path=\"/login/contractor\"\n              render={props => {\n                return !isEmpty(this.state.currentContractor) ? (\n                  <Redirect to=\"/contractor\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    newUser={false}\n                    contractor={true}\n                    routerProps={props}\n                  />\n                );\n              }}\n            />\n\n            <Route\n              exact\n              path=\"/login\"\n              render={props => {\n                return !isEmpty(this.state.currentUser) ? (\n                  <Redirect to=\"/profile\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    newUser={false}\n                    contractor={false}\n                    routerProps={props}\n                  />\n                );\n              }}\n            />\n\n            <Route\n              exact\n              path=\"/signup\"\n              render={props =>\n                !isEmpty(this.state.currentUser) ? (\n                  <Redirect to=\"/profile\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    newUser={true}\n                    routerProps={props}\n                    contractor={false}\n                  />\n                )\n              }\n            />\n\n            <Route\n              exact\n              path=\"/profile\"\n              render={() => {\n                return !isEmpty(this.state.currentUser) ? (\n                  <ProfileContainer\n                    user={this.state.currentUser}\n                    specialties={specialties}\n                    tasks={this.state.tasks}\n                    addTask={this.addTask}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                );\n              }}\n            />\n\n            <Route\n              path=\"/contractors\"\n              render={routerProps => {\n                return !isEmpty(this.state.currentUser) ? (\n                  <ContractorsContainer\n                    user={this.state.currentUser}\n                    specialties={specialties}\n                    currentTask={this.currentTask}\n                    {...routerProps}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                );\n              }}\n            />\n\n            <Route\n              path=\"/signup/contractor\"\n              render={props =>\n                !isEmpty(this.state.currentContractor) ? (\n                  <Redirect to=\"/contractor\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    contractor={true}\n                    routerProps={props}\n                    newUser={true}\n                  />\n                )\n              }\n            />\n\n            {!isEmpty(this.state.currentUser) ? (\n              <Route\n                exact\n                path=\"/task/:id\"\n                render={props => {\n                  let taskObj = this.state.currentUser.tasks.find(\n                    task => task.id == props.match.params.id\n                  );\n\n                  return !isEmpty(taskObj) ? (\n                    <TaskShowPage\n                      task={taskObj}\n                      acceptBid={this.acceptBid}\n                      deleteBid={this.deleteBid}\n                      deleteTask={this.deleteTask}\n                    />\n                  ) : (\n                    <Redirect to=\"/profile\" />\n                  );\n                }}\n              />\n            ) : (\n              <Redirect to=\"/login\" />\n            )}\n\n            {/* <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} /> */}\n          </Switch>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}