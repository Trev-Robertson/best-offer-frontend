{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js\";\nimport React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\nimport { Link } from 'react-router-dom';\nimport { Card, Feed } from 'semantic-ui-react'; // import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      specialties: [{\n        id: 1,\n        name: \"gardening\"\n      }, {\n        id: 2,\n        name: \"capentry\"\n      }, {\n        id: 3,\n        name: \"plumbing\"\n      }, {\n        id: 4,\n        name: \"technology\"\n      }, {\n        id: 5,\n        name: \"electrician\"\n      }],\n      currentUser: {}\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.name.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.props.user.id\n      };\n      event.target.reset();\n      console.log(event);\n      fetch(TASKS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => this.setState({\n        currentUser\n      }));\n    };\n\n    this.sortBids = task => {\n      let sorted = task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      console.log();\n      return sorted[0] ? \"\".concat(sorted[0].price, \" by \").concat(sorted[0].contractor.name) : '  No Bids Yet';\n    };\n\n    this.CardExampleLinkCard = task => React.createElement(Card, {\n      href: \"/task/\".concat(task.id),\n      header: task.name,\n      meta: \"Friend\",\n      description: task.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n  componentDidMount() {\n    fetch(SPECIALTIES).then(res => res.json()).then(specialties => {\n      this.setState({\n        currentUser: this.props.user\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Hi, \", this.state.currentUser ? this.state.currentUser.name : null), React.createElement(NewTaskForm, {\n      specialties: this.state.specialties,\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Current Tasks\", \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? this.state.currentUser.tasks.map(task => React.createElement(Link, {\n      key: Math.floor(Math.random() * 100000000000 + 1),\n      to: \"/task/\".concat(task.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, task => this.CardExampleLinkCard(task))) : null));\n  }\n\n} // <div key={Math.floor((Math.random() * 100000000000) + 1)}>\n//             <div  onClick={() => this.props.currentTask(task)} >\n//                   {\" \"}\n//                   Job: {task.name}\n//                   <br /> Description: {task.description} <br />\n//                    Current Lowest Bid: ${this.sortBids(task)}\n//                    <br /><br /><br />\n//                 </div>\n//                 </div>\n// localStorage.setItem(\"token\", \"eyJhbGciOiJIUzUxMiJ9.eyJ1c2VyX2lkIjo1fQ.Zpuw5z3XsV5yi5LQkVQxkjqK9ODqf8UAn8MI9RDH3JOM4PcbKckFlJFMiDUvyUiFpR6hWrb_Abkq037kPamzFA\")","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js"],"names":["React","NewTaskForm","isEmpty","Link","Card","Feed","SPECIALTIES","TASKS","Component","state","specialties","id","name","currentUser","addTask","event","preventDefault","data","target","value","description","specialty_id","specialty","user_id","props","user","reset","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","setState","sortBids","task","sorted","bids","sort","a","b","price","contractor","CardExampleLinkCard","componentDidMount","render","tasks","map","Math","floor","random"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\nimport {Link} from 'react-router-dom'\nimport { Card, Feed } from 'semantic-ui-react'\n// import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\n\nexport default class extends React.Component {\n  state = {\n    specialties: [{id: 1, name: \"gardening\"},\n     {id: 2, name: \"capentry\"},\n     {id: 3, name: \"plumbing\"},\n     {id: 4, name: \"technology\"},\n     {id: 5, name: \"electrician\"} ],\n    currentUser: {}\n  };\n\n  componentDidMount() {\n    fetch(SPECIALTIES)\n      .then(res => res.json())\n      .then(specialties =>{\n      \n        this.setState({\n          currentUser: this.props.user\n        })\n        \n      });\n  }\n\n  addTask = event => {\n    event.preventDefault();\n    let data = {\n      name: event.target.name.value,\n      description: event.target.description.value,\n      specialty_id: event.target.specialty.value,\n      user_id: this.props.user.id\n    };\n    event.target.reset();\n    console.log(event);\n    fetch(TASKS, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser =>\n        this.setState({\n          currentUser\n        })\n      );\n  };\n\n  sortBids = task => {\n    let sorted = task.bids.sort((a, b) => (a.price > b.price ? 1 : -1));\n   \n      console.log()\n    return sorted[0] ? `${sorted[0].price} by ${sorted[0].contractor.name}` : '  No Bids Yet'\n  };\n\n  CardExampleLinkCard = (task) => (\n    <Card\n      href={`/task/${task.id}`}\n      header={task.name}\n      meta='Friend'\n      description={task.description}\n    />\n  )\n\n  render() {\n   \n    return (\n      <div className=\"columns\">\n        <div className=\"column\">\n          Hi, {this.state.currentUser ? this.state.currentUser.name : null}\n        </div>\n        <NewTaskForm\n          specialties={this.state.specialties}\n          addTask={this.addTask}\n        />\n        <div className=\"column\">\n          Current Tasks{\" \"}\n          <br /><br />\n          {!isEmpty(this.state.currentUser)\n            ? this.state.currentUser.tasks.map(task =>  \n              <Link  key={Math.floor((Math.random() * 100000000000) + 1)} to={`/task/${task.id}`}>\n                      {(task) => this.CardExampleLinkCard(task)}\n                </Link>\n              )\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n// <div key={Math.floor((Math.random() * 100000000000) + 1)}>\n//             <div  onClick={() => this.props.currentTask(task)} >\n//                   {\" \"}\n//                   Job: {task.name}\n//                   <br /> Description: {task.description} <br />\n//                    Current Lowest Bid: ${this.sortBids(task)}\n//                    <br /><br /><br />\n//                 </div>\n//                 </div>\n\n// localStorage.setItem(\"token\", \"eyJhbGciOiJIUzUxMiJ9.eyJ1c2VyX2lkIjo1fQ.Zpuw5z3XsV5yi5LQkVQxkjqK9ODqf8UAn8MI9RDH3JOM4PcbKckFlJFMiDUvyUiFpR6hWrb_Abkq037kPamzFA\")"]},"metadata":{},"sourceType":"module"}