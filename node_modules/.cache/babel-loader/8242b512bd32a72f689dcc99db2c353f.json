{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js\";\nimport React from \"react\";\nexport default class ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.sortBids = () => {\n      let sorted = this.props.task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: () => this.props.this.toggleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Task:\"), \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.task.name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Description:\"), \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.task.description), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Bids:\"), this.sortBids().map(bid => {\n      return React.createElement(\"p\", {\n        key: Math.floor(Math.random() * 100000000000 + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"$\", bid.price, \" by \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, bid.contractor.name));\n    }));\n  }\n\n} // {\n//     this.sortBids().map(bid => {\n//         <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n//            Bid: <p>{bid.price} by: {bid.contractor.name}</p>\n//         </p>\n//     })\n// }","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js"],"names":["React","ProfileContainer","Component","sortBids","sorted","props","task","bids","sort","a","b","price","render","this","toggleTask","name","description","map","bid","Math","floor","random","contractor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAC5DC,QAD4D,GACjD,MAAM;AACf,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,IAArB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KACrCD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADd,CAAb;AAGA,aAAOP,MAAP;AACD,KAN2D;AAAA;;AAQ5DQ,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWQ,IAAX,CAAgBC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,OACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,IAArB,CADlB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,OAEwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,WAArB,CAFxB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIG,KAAKb,QAAL,GAAgBc,GAAhB,CAAoBC,GAAG,IAAI;AAC1B,aACE;AAAG,QAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,YAAjB,GAAiC,CAA5C,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACIH,GAAG,CAACP,KADR,UACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASO,GAAG,CAACI,UAAJ,CAAeP,IAAxB,CADlB,CADF;AAKD,KANA,CAJH,CADF;AAcD;;AAxB2D,C,CA2B9D;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n\nexport default class ProfileContainer extends React.Component {\n  sortBids = () => {\n    let sorted = this.props.task.bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    return sorted;\n  };\n\n  render() {\n    \n    return (\n      <div onClick={() => this.props.this.toggleTask}>\n        <h1 >Task:</h1> <h3>{this.props.task.name}</h3>\n        <h1>Description:</h1> <h3>{this.props.task.description}</h3>\n        <h1>Bids:</h1>\n        {this.sortBids().map(bid => {\n          return (\n            <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n              ${bid.price} by <strong>{bid.contractor.name}</strong>\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n// {\n//     this.sortBids().map(bid => {\n//         <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n//            Bid: <p>{bid.price} by: {bid.contractor.name}</p>\n//         </p>\n//     })\n// }\n"]},"metadata":{},"sourceType":"module"}