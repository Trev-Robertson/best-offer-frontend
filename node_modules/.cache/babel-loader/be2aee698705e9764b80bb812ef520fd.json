{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js\";\nimport React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport BidModal from './BidModal';\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class ContractorTaskShowPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anyBidsSelected: false,\n      sortedBids: [],\n      currentTask: []\n    };\n\n    this.sortBids = bids => {\n      let sorted = bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n\n    this.componentDidMount = props => {\n      debugger;\n      fetch(TASKS + this.props.routerProps.match.url).then(res => res.json()).then(task => {\n        let sortedBids = this.sortBids(task.bids);\n        this.setState({\n          currentTask: task,\n          sortedBids: sortedBids\n        });\n        task.bids.forEach(bid => {\n          if (bid.status) {\n            this.setState({\n              anyBidsSelected: true\n            });\n          }\n        });\n      });\n    };\n\n    this.showBid = () => {\n      let contBid;\n      let bid;\n\n      if (this.state.currentTask.task_done) {\n        bid = this.state.currentTask.bids.find(bid => bid.status === true);\n      } else {\n        bid = this.state.sortedBids[0];\n        contBid = this.props.contractor.bids.find(bid => bid.task.id === this.state.currentTask.id);\n\n        if (bid && contBid) {\n          bid = bid.price < contBid.price ? bid : contBid;\n        }\n      }\n\n      return bid ? bid.price : 0;\n    };\n\n    this.yourBid = contractor => {\n      if (this.state.sortedBids[0]) {\n        return this.state.sortedBids[0].contractor_id === this.props.contractor.id ? \"Congrats You Have The Current Lowest Bid Of $\".concat(this.showBid()) : \"Lowest Current Bid: $\".concat(this.showBid());\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Title:\", \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.currentTask.name)), \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.currentTask.description), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, this.state.currentTask.task_done ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" Winning Bid: $\", this.showBid()) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.yourBid())), React.createElement(\"div\", {\n      className: \"bids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js"],"names":["React","Button","Card","Image","Link","BidModal","TASKS","ContractorTaskShowPage","Component","state","anyBidsSelected","sortedBids","currentTask","sortBids","bids","sorted","sort","a","b","price","componentDidMount","props","fetch","routerProps","match","url","then","res","json","task","setState","forEach","bid","status","showBid","contBid","task_done","find","contractor","id","yourBid","contractor_id","render","name","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport BidModal from './BidModal'\n\nconst TASKS = \"http://localhost:3000/tasks/\"\n\nexport default class ContractorTaskShowPage extends React.Component {\n  state = {\n    anyBidsSelected: false,\n    sortedBids: [],\n    currentTask: []\n  };\n\n  sortBids = (bids) => {\n   \n      \n    let sorted = bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    \n    return sorted;\n  };\n\n\n\n  componentDidMount = (props) => {\n    debugger\n    fetch(TASKS + this.props.routerProps.match.url)\n    .then(res => res.json())\n    .then(task => {\n   \n      let sortedBids = this.sortBids(task.bids)\n      this.setState({\n        currentTask: task, \n        sortedBids: sortedBids,\n        \n      })\n      task.bids.forEach(bid => {\n      if (bid.status) {\n        this.setState({\n          anyBidsSelected: true\n        });\n      }\n    });\n  })\n  ;\n  };\n\n  // CardExampleGroups = () => {\n  //   let bid\n  //   let myBid \n  //   this.state.currentTask.task_done ? bid = this.state.currentTask.bids.find(bid => bid.status === true) : bid = this.state.sortedBids[0]\n  //   this.state.currentTask.bids ? myBid = this.props.contractor.bids.find(bid => bid.task.id === this.state.currentTask.id) : myBid = null\n   \n  //  return this.state.currentTask ?\n  //    <Card.Group>\n  //       <Card>\n  //         <Card.Content >\n\n  //         {bid.status ? \n  //         <h1>{bid.contractor_id === this.props.contractor.id? 'Congrats You Won!' : 'Bidding Is Now Over '} </h1> \n\n  //         : \n  //         <h3>{myBid ?  `Your current bid is $${myBid.price}` : 'No Bids Yet, Bid now!'}</h3>\n          \n  //         }\n  //           <Card.Header></Card.Header>\n  //           <Card.Meta>\n  //             {/* {bid.status ? `Winning Bid Was $${bid.price}` : null} */}\n  //           </Card.Meta>\n            \n  //         </Card.Content>\n  //         <Card.Content extra>\n  //           {!bid.status ? \n\n  //             <div className=\"ui two buttons\">\n      \n  //                <BidModal \n  //                makeABid={this.props.makeABid}\n  //                contractor={this.props.contractor}\n  //                task={this.state.currentTask}\n  //                />\n  //             {myBid ?\n  //             <Button\n  //             basic\n  //             color=\"red\"\n  //             onClick={(event) => this.props.contractorDeleteBid(event, myBid.id, this.props.contractor)}\n  //             >Delete Bid</Button>\n  //               : null}\n  //             </div>\n\n\n  //            : null}\n  //         </Card.Content>\n  //       </Card>\n  //     </Card.Group>\n  //    : null\n  // };\n\n  showBid = () => {\n    let contBid\n    let bid \n    if (this.state.currentTask.task_done){\n      bid = this.state.currentTask.bids.find(bid => bid.status === true) \n    }\n   else {  \n     bid = this.state.sortedBids[0] \n     contBid = this.props.contractor.bids.find(bid => bid.task.id === this.state.currentTask.id)\n     if (bid && contBid){\n       bid = bid.price < contBid.price ? bid : contBid\n     }\n      \n    }\n   \n     return bid ? bid.price : 0\n   \n  \n  }\n\n\n  yourBid = (contractor) => {\n    if(this.state.sortedBids[0]){\n   return this.state.sortedBids[0].contractor_id === this.props.contractor.id ? `Congrats You Have The Current Lowest Bid Of $${this.showBid()}` : `Lowest Current Bid: $${this.showBid()}`\n    }\n  }\n\n  render() {\n  \n    return (\n      <div>\n        <Link to=\"/profile\">\n          {\" \"}\n        </Link>\n           <h1>\n          Title:{\" \"}\n          <h3>\n            <strong>{this.state.currentTask.name}</strong>\n          </h3>{\" \"}\n        </h1>\n        <h1>\n          Description: <h3>{this.state.currentTask.description}</h3>{\" \"}\n        </h1>\n        <div>\n        {this.state.currentTask.task_done ? <h1> Winning Bid: ${this.showBid()}</h1> : <h3>{this.yourBid()}</h3>}\n        {/* <h1>Lowest Current Bid: ${this.state.sortedBids[0]? this.state.sortedBids[0].price: null}</h1> */}\n        </div>\n       \n        <div className=\"bids\">\n              {/* {this.CardExampleGroups()} */}\n        </div>\n      \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}