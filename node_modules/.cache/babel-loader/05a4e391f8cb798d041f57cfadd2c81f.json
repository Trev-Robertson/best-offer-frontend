{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js\";\nimport React from 'react';\nimport { Button, Card, Image } from 'semantic-ui-react';\nexport default class ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.sortBids = () => {\n      let sorted = this.props.task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n\n    this.CardExampleGroups = bid => {// <Card.Group>\n      //   <Card>\n      //     <Card.Content>\n      //       <Image\n      //         floated='right'\n      //         size='mini'\n      //         src='/images/avatar/large/steve.jpg'\n      //       />\n      //       <Card.Header>{bid.contractor.name}</Card.Header>\n      //       <Card.Meta>Top Contractor!</Card.Meta>\n      //       <Card.Description>\n      //       {bid.contractor.name} will do it for less!\n      //       </Card.Description>\n      //     </Card.Content>\n      //     <Card.Content extra>\n      //       <div className='ui two buttons'>\n      //         <Button basic color='green'>\n      //           Accept bid of ${bid.price}\n      //         </Button>\n      //         <Button basic color='red'>\n      //           Decline\n      //         </Button>\n      //       </div>\n      //     </Card.Content>\n      //   </Card>\n      // </Card.Group>\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.props.toggleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Task:\"), \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.task.name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Description:\"), \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.task.description), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Bids:\"), this.sortBids().map(bid => {\n      React.createElement(\"p\", {\n        key: Math.floor(Math.random() * 100000000000 + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"$\", bid.price, \" by \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, bid.contractor.name));\n    }));\n  }\n\n} // this.CardExampleGroups(bid)","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js"],"names":["React","Button","Card","Image","ProfileContainer","Component","sortBids","sorted","props","task","bids","sort","a","b","price","CardExampleGroups","bid","render","toggleTask","name","description","map","Math","floor","random","contractor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AAEA,eAAe,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAC5DC,QAD4D,GACjD,MAAM;AACf,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,IAArB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KACrCD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADd,CAAb;AAGA,aAAOP,MAAP;AACD,KAN2D;;AAAA,SAS9DQ,iBAT8D,GASzCC,GAAD,IAAS,CACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KApC6D;AAAA;;AAuC5DC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWU,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,OACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,IAArB,CADlB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,OAEwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWC,IAAX,CAAgBW,WAArB,CAFxB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIG,KAAKd,QAAL,GAAgBe,GAAhB,CAAoBL,GAAG,IAAI;AAE1B;AAAG,QAAA,GAAG,EAAEM,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,YAAjB,GAAiC,CAA5C,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACNR,GAAG,CAACF,KADE,UACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASE,GAAG,CAACS,UAAJ,CAAeN,IAAxB,CADR;AAID,KANA,CAJH,CADF;AAcD;;AAvD2D,C,CA2D9D","sourcesContent":["import React from 'react'\nimport { Button, Card, Image } from 'semantic-ui-react'\n\nexport default class ProfileContainer extends React.Component {\n  sortBids = () => {\n    let sorted = this.props.task.bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    return sorted;\n  };\n\n\nCardExampleGroups = (bid) => { \n    // <Card.Group>\n    //   <Card>\n    //     <Card.Content>\n    //       <Image\n    //         floated='right'\n    //         size='mini'\n    //         src='/images/avatar/large/steve.jpg'\n    //       />\n    //       <Card.Header>{bid.contractor.name}</Card.Header>\n    //       <Card.Meta>Top Contractor!</Card.Meta>\n    //       <Card.Description>\n    //       {bid.contractor.name} will do it for less!\n    //       </Card.Description>\n    //     </Card.Content>\n    //     <Card.Content extra>\n    //       <div className='ui two buttons'>\n    //         <Button basic color='green'>\n    //           Accept bid of ${bid.price}\n    //         </Button>\n    //         <Button basic color='red'>\n    //           Decline\n    //         </Button>\n    //       </div>\n    //     </Card.Content>\n    //   </Card>\n    // </Card.Group>\n}\n\n\n  render() {\n    \n    return (\n      <div onClick={this.props.toggleTask}>\n        <h1 >Task:</h1> <h3>{this.props.task.name}</h3>\n        <h1>Description:</h1> <h3>{this.props.task.description}</h3>\n        <h1>Bids:</h1>\n        {this.sortBids().map(bid => {\n          \n          <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n  ${bid.price} by <strong>{bid.contractor.name}</strong>\n</p>\n          \n        })}\n      </div>\n    );\n  }\n}\n\n\n// this.CardExampleGroups(bid)\n\n\n"]},"metadata":{},"sourceType":"module"}