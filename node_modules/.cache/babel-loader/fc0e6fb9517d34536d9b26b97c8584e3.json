{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorShowPage.js\";\nimport React from \"react\";\nimport { Button, Comment, Form, Header, Rating, Card } from \"semantic-ui-react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport ReviewForm from \"./ReviewForm\";\nexport default class ContractorShowPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rating: 3\n    };\n\n    this.handleRate = (e, {\n      rating,\n      maxRating\n    }) => {\n      this.setState({\n        rating: rating\n      });\n    };\n\n    this.CommentExampleComment = review => {\n      return React.createElement(Comment, {\n        key: review.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Comment.Avatar, {\n        src: \"https://randomuser.me/api/portraits/\".concat([\"women\", \"men\"][Math.floor(Math.random() * 2)], \"/\").concat(Math.floor(Math.random() * 99), \".jpg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(Comment.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Comment.Author, {\n        as: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, review.user.name), React.createElement(Comment.Metadata, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, review.created_at.split(\"T\")[0], \" \", React.createElement(Rating, {\n        icon: \"star\",\n        disabled: true,\n        rating: review.stars,\n        maxRating: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }))), React.createElement(Comment.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, review.content)));\n    };\n\n    this.averageStars = () => {\n      let sum = this.props.contractor.reviews.reduce((a, b) => ({\n        stars: a.stars + b.stars\n      })).stars;\n      let avg = sum / this.props.contractor.reviews.length;\n      return avg.toFixed(2);\n    };\n\n    this.acceptedBid = () => {\n      let acceptedBid = {};\n      this.props.user.tasks.map(task => task.bids.map(bid => bid.status === true ? acceptedBid = bid : bid));\n      this.props.contractor.id === acceptedBid;\n    };\n  }\n\n  render() {\n    console.log(this.props.user.tasks);\n    debugger;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Card, {\n      image: \"https://randomuser.me/api/portraits/\".concat([\"women\", \"men\"][Math.floor(Math.random() * 2)], \"/\").concat(Math.floor(Math.random() * 99), \".jpg\"),\n      header: this.props.contractor.name,\n      meta: \"My Specialties Are \".concat(this.props.contractor.specialties[0].name[0].toUpperCase() + this.props.contractor.specialties[0].name.slice(1), \" \\n    and \").concat(this.props.contractor.specialties[1].name[0].toUpperCase() + this.props.contractor.specialties[1].name.slice(1)),\n      description: \"A professional with \".concat(Math.floor(Math.random() * 30) + 2, \" years of experience\"),\n      extra: \"Check my great reviews!!!!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"You accpted a bid from this contractor to complete these tasks:\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Comment.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(ReviewForm, {\n      addNewReview: this.props.addNewReview,\n      contractor: this.props.contractor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.props.contractor.reviews.reverse().map(review => this.CommentExampleComment(review))))));\n  }\n\n} //  this.props.user.tasks.map(task=> {\n//        task.bid.filter(bid => {\n//              bids.status === true})})\n// this.props.user.tasks.map(task => task.bids.map(bid => bid.status))","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorShowPage.js"],"names":["React","Button","Comment","Form","Header","Rating","Card","BrowserRouter","Router","Route","Switch","Redirect","ReviewForm","ContractorShowPage","Component","state","rating","handleRate","e","maxRating","setState","CommentExampleComment","review","id","Math","floor","random","user","name","created_at","split","stars","content","averageStars","sum","props","contractor","reviews","reduce","a","b","avg","length","toFixed","acceptedBid","tasks","map","task","bids","bid","status","render","console","log","specialties","toUpperCase","slice","addNewReview","reverse"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Comment, Form, Header, Rating, Card } from \"semantic-ui-react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport ReviewForm from \"./ReviewForm\";\n\nexport default class ContractorShowPage extends React.Component {\n  state = { rating: 3 };\n\n  handleRate = (e, { rating, maxRating }) => {\n    this.setState({\n      rating: rating\n    });\n  };\n\n  CommentExampleComment = review => {\n    return (\n      <Comment key={review.id}>\n        <Comment.Avatar\n          src={`https://randomuser.me/api/portraits/${\n            [\"women\", \"men\"][Math.floor(Math.random() * 2)]\n          }/${Math.floor(Math.random() * 99)}.jpg`}\n        />\n        <Comment.Content>\n          <Comment.Author as=\"a\">{review.user.name}</Comment.Author>\n          <Comment.Metadata>\n            <div>\n              {review.created_at.split(\"T\")[0]}{\" \"}\n              <Rating\n                icon=\"star\"\n                disabled\n                rating={review.stars}\n                maxRating={5}\n              />\n            </div>\n          </Comment.Metadata>\n          <Comment.Text>{review.content}</Comment.Text>\n          {/* <Comment.Actions>\n          <Comment.Action>Reply</Comment.Action>\n        </Comment.Actions> */}\n        </Comment.Content>\n      </Comment>\n    );\n  };\n\n  averageStars = () => {\n    let sum = this.props.contractor.reviews.reduce((a, b) => ({\n      stars: a.stars + b.stars\n    })).stars;\n\n    let avg = sum / this.props.contractor.reviews.length;\n    return avg.toFixed(2);\n  };\n\n\n    acceptedBid = () =>{\n        let acceptedBid = {}\n      this.props.user.tasks.map(task => task.bids.map(bid => bid.status === true ? acceptedBid = bid : bid))\n\n      this.props.contractor.id === acceptedBid\n\n    }\n\n  render() {\n    console.log(this.props.user.tasks);\n    debugger\n    return (\n      <div>\n        <br />\n        <br />\n        <br />\n        <div className=\"bids\">\n          <Card\n            image={`https://randomuser.me/api/portraits/${\n              [\"women\", \"men\"][Math.floor(Math.random() * 2)]\n            }/${Math.floor(Math.random() * 99)}.jpg`}\n            header={this.props.contractor.name}\n            meta={`My Specialties Are ${this.props.contractor.specialties[0].name[0].toUpperCase() +\n              this.props.contractor.specialties[0].name.slice(1)} \n    and ${this.props.contractor.specialties[1].name[0].toUpperCase() +\n      this.props.contractor.specialties[1].name.slice(1)}`}\n            description={`A professional with ${Math.floor(Math.random() * 30) +\n              2} years of experience`}\n            extra={\"Check my great reviews!!!!\"}\n          />\n          <div>\n            You accpted a bid from this contractor to complete these tasks: \n            {/* this.props.contractor.id\n            {this.props.user.task.map(task => {\n                \n            })} */}\n            </div>\n            <div>\n             \n          <Comment.Group>\n            <ReviewForm\n              addNewReview={this.props.addNewReview}\n              contractor={this.props.contractor}\n            />\n            {this.props.contractor.reviews\n              .reverse()\n              .map(review => this.CommentExampleComment(review))}\n          </Comment.Group>\n              </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n//  this.props.user.tasks.map(task=> {\n//        task.bid.filter(bid => {\n//              bids.status === true})})\n// this.props.user.tasks.map(task => task.bids.map(bid => bid.status))"]},"metadata":{},"sourceType":"module"}