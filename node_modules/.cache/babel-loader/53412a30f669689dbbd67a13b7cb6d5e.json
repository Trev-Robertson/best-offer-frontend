{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorProfileContainer.js\";\nimport React from \"react\";\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'; // import store from '../redux/store'\n\nimport ContractorProfile from '../components/ContractorProfile';\nimport ContractorTaskShowPage from \"../components/ContractorTaskShowPage\";\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class ContractorProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anyBidsSelected: false,\n      sortedBids: [],\n      currentTask: []\n    };\n\n    this.componentDidMount = routerProps => {\n      fetch(TASKS + routerProps.match.params.id).then(res => res.json()).then(task => {\n        console.log(\"props\", routerProps);\n\n        if (!task.error) {\n          let sortedBids = this.sortBids(task.bids);\n          this.setState({\n            currentTask: task,\n            sortedBids: sortedBids\n          });\n          task.bids.forEach(bid => {\n            if (bid.status) {\n              this.setState({\n                anyBidsSelected: true\n              });\n            }\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/task/:id\"),\n      render: routerProps => {\n        // debugger\n        // let taskObj = this.props.contractor.bids.find(\n        //   bid => bid.task.id == props.match.params.id\n        // )\n        return React.createElement(ContractorTaskShowPage, {\n          id: routerProps.match.params.id,\n          contractor: this.props.contractor,\n          makeABid: this.props.makeABid,\n          contractorDeleteBid: this.props.contractorDeleteBid,\n          routerProps: routerProps,\n          currentTask: this.state.currentTask,\n          sortedBids: this.state.sortedBids,\n          anyBidsSelected: this.state.anyBidsSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url),\n      render: routerProps => {\n        return React.createElement(ContractorProfile, {\n          contractor: this.props.contractor,\n          routerProps: routerProps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorProfileContainer.js"],"names":["React","Button","Header","Icon","Modal","ContractorProfile","ContractorTaskShowPage","BrowserRouter","Router","Route","Switch","Redirect","TASKS","ContractorProfileContainer","Component","state","anyBidsSelected","sortedBids","currentTask","componentDidMount","routerProps","fetch","match","params","id","then","res","json","task","console","log","error","sortBids","bids","setState","forEach","bid","status","render","props","url","contractor","makeABid","contractorDeleteBid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react'\n// import store from '../redux/store'\nimport ContractorProfile from '../components/ContractorProfile'\nimport ContractorTaskShowPage from \"../components/ContractorTaskShowPage\";\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nconst TASKS = \"http://localhost:3000/tasks/\"\n\n\n\n\nexport default class ContractorProfileContainer extends React.Component {\n  state = {\n    anyBidsSelected: false,\n    sortedBids: [],\n    currentTask: []\n  };\n\n  componentDidMount = (routerProps) => {\n   \n    fetch(TASKS + routerProps.match.params.id)\n    .then(res => res.json())\n    .then(task => {\n      console.log(\"props\", routerProps)\n        if(!task.error){\n      let sortedBids = this.sortBids(task.bids)\n      this.setState({\n        currentTask: task, \n        sortedBids: sortedBids,\n        \n      })\n      task.bids.forEach(bid => {\n      if (bid.status) {\n        this.setState({\n          anyBidsSelected: true\n        })\n      }\n    }) }\n \n\n  })\n  ;\n  };\n\n\n\n  render() {\n    \n    return (\n      <div>\n        {/* <ContractorProfile contractor={this.props.contractor}/> */}\n\n        <Route\n          exact\n          path={`${this.props.match.url}/task/:id`}\n          render={routerProps => { \n            // debugger\n            // let taskObj = this.props.contractor.bids.find(\n            //   bid => bid.task.id == props.match.params.id\n            // )\n      \n            \n            return <ContractorTaskShowPage \n            id={routerProps.match.params.id}\n            contractor={this.props.contractor}\n            makeABid={this.props.makeABid}\n            contractorDeleteBid={this.props.contractorDeleteBid}\n            routerProps={routerProps}\n            currentTask={this.state.currentTask}\n            sortedBids={this.state.sortedBids}\n            anyBidsSelected={this.state.anyBidsSelected}\n            />\n          }}\n        />\n\n        <Route\n          exact\n          path={`${this.props.match.url}`}\n          render={(routerProps) => {\n           return <ContractorProfile contractor={this.props.contractor} routerProps={routerProps}/>\n            }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}