{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/Profile.js\";\nimport React from 'react';\nimport NewTaskForm from './NewTaskForm';\nimport { isEmpty } from 'lodash'; // import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = 'http://localhost:3000/tasks/';\nexport default class Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      specialties: [],\n      currentUser: {}\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.name.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.props.user.id\n      };\n      e.target.reset();\n      console.log(event);\n      fetch(TASKS, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => this.setState({\n        currentUser\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch(SPECIALTIES).then(res => res.json()).then(specialties => this.setState({\n      specialties: specialties,\n      currentUser: this.props.user\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Hi, \", this.state.currentUser ? this.state.currentUser.name : null), React.createElement(NewTaskForm, {\n      specialties: this.state.specialties,\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Current Bids \", !isEmpty(this.state.currentUser) ? this.state.currentUser.tasks.map(task => React.createElement(\"p\", {\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \" Job: \", task.name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \" Description: \", task.description, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), \" Active Bids: \", task.bids.map(bid => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"$\", bid.price, \" by \", bid.contractor.name)), \" \")) : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/Profile.js"],"names":["React","NewTaskForm","isEmpty","SPECIALTIES","TASKS","Profile","Component","state","specialties","currentUser","addTask","event","preventDefault","data","name","target","value","description","specialty_id","specialty","user_id","props","user","id","e","reset","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","setState","componentDidMount","render","tasks","map","task","bids","bid","price","contractor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NewTaskForm from './NewTaskForm'\nimport {isEmpty} from 'lodash'\n// import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS =  'http://localhost:3000/tasks/'\n\nexport default class Profile extends React.Component {\n\n\n  state = {\n    specialties: [],\n    currentUser: {}\n  }\n\n  componentDidMount(){\n    fetch(SPECIALTIES)\n    .then(res => res.json())\n    .then(specialties => this.setState({\n      specialties: specialties,\n      currentUser: this.props.user\n    }))\n  }\n\n    addTask = (event) =>{\n   \n        event.preventDefault()\n        let data = {\n          name: event.target.name.value,\n          description: event.target.description.value,\n          specialty_id: event.target.specialty.value,\n          user_id: this.props.user.id\n        }\n        e.target.reset()\n        console.log(event)\n        fetch(TASKS, {\n          method: 'POST', \n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify(data)\n        })\n        .then(res => res.json())\n        .then(currentUser => \n          this.setState({\n            currentUser\n          })\n          )\n    }\n\n\n  \n    render(){\n     \n        return(\n            <div className='columns'>\n            <div className='column'>\n              Hi, {this.state.currentUser ? this.state.currentUser.name : null}\n            </div>\n            <NewTaskForm specialties={this.state.specialties} addTask={this.addTask}/>\n            <div className='column'>\n              Current Bids {!isEmpty(this.state.currentUser) ? this.state.currentUser.tasks.map(task => <p key={task.id}> Job: {task.name} <br/><br/> Description: {task.description} <br/><br/> Active Bids: {task.bids.map(bid => <p>${bid.price} by {bid.contractor.name}</p>)} </p>) : null}\n            </div>\n        </div>\n    )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}