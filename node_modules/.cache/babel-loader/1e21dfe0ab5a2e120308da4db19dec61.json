{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/EditProfile.js\";\nimport React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\"; // import {Link} from 'react-router-dom'\n\nimport { Card } from \"semantic-ui-react\"; // import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nexport default class EditProfile extends React.Component {\n  //   state = {\n  //     specialties: [\n  //       { id: 1, name: \"gardening\" },\n  //       { id: 2, name: \"carpentry\" },\n  //       { id: 3, name: \"plumbing\" },\n  //       { id: 4, name: \"technology\" },\n  //       { id: 5, name: \"electrician\" }\n  //     ],\n  //     currentUser: {}\n  //   };\n  //   componentDidMount() {\n  //     this.setState({\n  //       currentUser: this.props.user\n  //     });\n  //   }\n  //   sortBids = task => {\n  //     let sorted = task.bids.sort((a, b) => (a.price > b.price ? 1 : -1));\n  //     console.log();\n  //     return sorted[0]\n  //       ? `Lowest Bid: $${sorted[0].price}, by ${sorted[0].contractor.name}`\n  //       : \"  No Bids Yet\";\n  //   };\n  //   CardExampleLinkCard = task => {\n  //     // debugger;\n  //     return (\n  //       <Card\n  //         key={Math.floor(Math.random() * 100000000000 + 1)}\n  //         color=\"blue\"\n  //         href={`/task/${task.id}`}\n  //         header={task.name}\n  //         meta={\n  //           task.specialty.name[0].toUpperCase() + task.specialty.name.slice(1)\n  //         }\n  //         description={`Description: ${task.description} ${this.sortBids(task)}`}\n  //       />\n  //     );\n  //   };\n  //   doneTaskNames = () => {\n  //     let acceptBid = [];\n  //     this.state.currentUser.tasks.map(task =>\n  //       task.bids.map(bid => (bid.status === true ? acceptBid.push(task) : bid))\n  //     );\n  //     return acceptBid;\n  //   };\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \" Hi, \", this.props.user ? this.props.user.name : null), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"What Do You Need Done?\"), React.createElement(NewTaskForm, {\n      specialties: this.state.specialties,\n      addTask: this.props.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Active Tasks:\"), React.createElement(\"div\", {\n      className: \"current-task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.currentUser.tasks.map(task => {\n      if (!task.task_done) {\n        return this.CardExampleLinkCard(task);\n      }\n    })) : null), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Accepted Bids:\"), React.createElement(\"div\", {\n      className: \"current-task\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, !isEmpty(this.state.currentUser) ? React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.doneTaskNames().map(task => {\n      return this.CardExampleLinkCard(task);\n    })) : null)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/EditProfile.js"],"names":["React","NewTaskForm","isEmpty","Card","EditProfile","Component","render","props","user","name","state","specialties","addTask","currentUser","tasks","map","task","task_done","CardExampleLinkCard","doneTaskNames"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CACA;;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;AACA;;AAEA,eAAe,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEEC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU,KAAKC,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWC,IAAX,CAAgBC,IAAlC,GAAyC,IAAnD,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCANF,EAOE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,WAD1B;AAEE,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAFF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,CAACV,OAAO,CAAC,KAAKQ,KAAL,CAAWG,WAAZ,CAAR,GACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWG,WAAX,CAAuBC,KAAvB,CAA6BC,GAA7B,CAAiCC,IAAI,IAAI;AACxC,UAAI,CAACA,IAAI,CAACC,SAAV,EAAqB;AACnB,eAAO,KAAKC,mBAAL,CAAyBF,IAAzB,CAAP;AACD;AACF,KAJA,CADH,CADD,GAQG,IAXN,CAFF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAfF,EAgBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACd,OAAO,CAAC,KAAKQ,KAAL,CAAWG,WAAZ,CAAR,GACC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKM,aAAL,GAAqBJ,GAArB,CAAyBC,IAAI,IAAI;AAChC,aAAO,KAAKE,mBAAL,CAAyBF,IAAzB,CAAP;AACD,KAFA,CADH,CADD,GAMG,IAPN,CAhBF,CAdF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxCF,CADF,CADF;AA8CD;;AApGsD","sourcesContent":["import React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\n// import {Link} from 'react-router-dom'\nimport { Card } from \"semantic-ui-react\";\n// import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nexport default class EditProfile extends React.Component {\n//   state = {\n//     specialties: [\n//       { id: 1, name: \"gardening\" },\n//       { id: 2, name: \"carpentry\" },\n//       { id: 3, name: \"plumbing\" },\n//       { id: 4, name: \"technology\" },\n//       { id: 5, name: \"electrician\" }\n//     ],\n//     currentUser: {}\n//   };\n\n//   componentDidMount() {\n//     this.setState({\n//       currentUser: this.props.user\n//     });\n//   }\n\n//   sortBids = task => {\n//     let sorted = task.bids.sort((a, b) => (a.price > b.price ? 1 : -1));\n\n//     console.log();\n//     return sorted[0]\n//       ? `Lowest Bid: $${sorted[0].price}, by ${sorted[0].contractor.name}`\n//       : \"  No Bids Yet\";\n//   };\n\n//   CardExampleLinkCard = task => {\n//     // debugger;\n//     return (\n//       <Card\n//         key={Math.floor(Math.random() * 100000000000 + 1)}\n//         color=\"blue\"\n//         href={`/task/${task.id}`}\n//         header={task.name}\n//         meta={\n//           task.specialty.name[0].toUpperCase() + task.specialty.name.slice(1)\n//         }\n//         description={`Description: ${task.description} ${this.sortBids(task)}`}\n//       />\n//     );\n//   };\n\n//   doneTaskNames = () => {\n//     let acceptBid = [];\n\n//     this.state.currentUser.tasks.map(task =>\n//       task.bids.map(bid => (bid.status === true ? acceptBid.push(task) : bid))\n//     );\n\n//     return acceptBid;\n//   };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <br />\n          <div>\n            <div>\n              <h1> Hi, {this.props.user ? this.props.user.name : null}</h1>\n              <br />\n              <br />\n            </div>\n            <h1>What Do You Need Done?</h1>\n            <NewTaskForm\n              specialties={this.state.specialties}\n              addTask={this.props.addTask}\n            />\n          </div>\n          <div>\n            <h1>Active Tasks:</h1>\n            <div className=\"current-task\">\n              <br />\n              <br />\n              {!isEmpty(this.state.currentUser) ? (\n                <Card.Group>\n                  {this.state.currentUser.tasks.map(task => {\n                    if (!task.task_done) {\n                      return this.CardExampleLinkCard(task);\n                    }\n                  })}\n                </Card.Group>\n              ) : null}\n            </div>\n            <h1>Accepted Bids:</h1>\n            <div className=\"current-task\">\n              {!isEmpty(this.state.currentUser) ? (\n                <Card.Group>\n                  {this.doneTaskNames().map(task => {\n                    return this.CardExampleLinkCard(task);\n                  })}\n                </Card.Group>\n              ) : null}\n            </div>\n          </div>\n          <div></div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}