{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js\";\nimport React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport BidModal from './BidModal';\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class ContractorTaskShowPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {\n      console.log(\"show page mount\"); //   fetch(TASKS + this.props.id)\n      //   .then(res => res.json())\n      //   .then(task => {\n      //       if(!task.error){\n      //     let sortedBids = this.sortBids(task.bids)\n      //     this.setState({\n      //       currentTask: task, \n      //       sortedBids: sortedBids,\n      //     })\n      //     task.bids.forEach(bid => {\n      //     if (bid.status) {\n      //       this.setState({\n      //         anyBidsSelected: true\n      //       })\n      //     }\n      //   }) }\n      //   else{\n      //     return <Redirect to=\"/opentasks\" />\n      //   }\n      // })\n      // ;\n    };\n\n    this.sortBids = bids => {\n      let sorted = bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted[0];\n    };\n\n    this.CardExampleGroups = () => {\n      let bid;\n      let myBid; // debugger\n\n      this.props.currentTask.task_done ? bid = this.props.currentTask.bids.find(bid => bid.status === true) : bid = this.props.sortedBid;\n      this.props.currentTask.bids ? myBid = this.props.contractor.bids.find(bid => bid.task.id === this.props.currentTask.id) : myBid = null;\n      return this.props.sortedBid ? React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, bid.status ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, bid.contractor_id === this.props.contractor.id ? 'Congrats You Won!' : 'Bidding Is Now Over ', \" \") : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, myBid ? \"Your current bid is $\".concat(myBid.price) : 'No Bids Yet, Bid now!'), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, !bid.status ? React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(BidModal, {\n        makeABid: this.props.makeABid,\n        contractor: this.props.contractor,\n        task: this.props.currentTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), myBid ? React.createElement(Button, {\n        basic: true,\n        color: \"red\",\n        onClick: event => this.props.contractorDeleteBid(event, myBid.id, this.props.contractor),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Delete Bid\") : null) : null))) : React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, myBid ? \"Your current bid is $\".concat(myBid.price) : 'No Bids Yet, Bid now!'), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(BidModal, {\n        makeABid: this.props.makeABid,\n        contractor: this.props.contractor,\n        task: this.props.currentTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), myBid ? React.createElement(Button, {\n        basic: true,\n        color: \"red\",\n        onClick: event => this.props.contractorDeleteBid(event, myBid.id, this.props.contractor),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Delete Bid\") : null))));\n    };\n\n    this.showBid = () => {\n      let contBid;\n      let bid;\n\n      if (this.props.currentTask.task_done) {\n        bid = this.props.currentTask.bids.find(bid => bid.status === true);\n      } else {\n        bid = this.props.sortedBid;\n        contBid = this.props.contractor.bids.find(bid => bid.task.id === this.props.currentTask.id);\n        debugger;\n\n        if (bid && contBid) {\n          bid = bid.price < contBid.price ? bid : contBid;\n          debugger;\n        }\n      }\n\n      return bid ? bid.price : 0;\n    };\n\n    this.yourBid = () => {\n      if (this.props.sortedBid) {\n        return this.props.sortedBid.contractor_id === this.props.contractor.id ? \"Congrats You Have The Current Lowest Bid Of $\".concat(this.showBid()) : \"Lowest Current Bid: $\".concat(this.showBid());\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Title:\", \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.props.currentTask.name)), \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, this.props.currentTask.description), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.props.currentTask.task_done ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \" Winning Bid: $\", this.showBid()) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, this.yourBid())), React.createElement(\"div\", {\n      className: \"bids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.CardExampleGroups()));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js"],"names":["React","Button","Card","Image","Link","Redirect","BidModal","TASKS","ContractorTaskShowPage","Component","componentDidMount","console","log","sortBids","bids","sorted","sort","a","b","price","CardExampleGroups","bid","myBid","props","currentTask","task_done","find","status","sortedBid","contractor","task","id","contractor_id","makeABid","event","contractorDeleteBid","showBid","contBid","yourBid","render","name","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link , Redirect} from \"react-router-dom\";\nimport BidModal from './BidModal'\n\nconst TASKS = \"http://localhost:3000/tasks/\"\n\nexport default class ContractorTaskShowPage extends React.Component {\n//   state = {\n//     anyBidsSelected: false,\n//     sortedBids: [],\n//     currentTask: []\n//   };\n\n// 3\n\n\n  componentDidMount = () => {\n      console.log(\"show page mount\")\n  //   fetch(TASKS + this.props.id)\n  //   .then(res => res.json())\n  //   .then(task => {\n      \n  //       if(!task.error){\n  //     let sortedBids = this.sortBids(task.bids)\n  //     this.setState({\n  //       currentTask: task, \n  //       sortedBids: sortedBids,\n        \n  //     })\n  //     task.bids.forEach(bid => {\n  //     if (bid.status) {\n  //       this.setState({\n  //         anyBidsSelected: true\n  //       })\n  //     }\n  //   }) }\n  //   else{\n  //     return <Redirect to=\"/opentasks\" />\n  //   }\n\n  // })\n  // ;\n  };\n\n    sortBids = (bids) => {\n\n    let sorted = bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    \n    return sorted[0];\n  };\n\n\n  CardExampleGroups = () => {\n    let bid\n    let myBid \n    // debugger\n    this.props.currentTask.task_done ? bid = this.props.currentTask.bids.find(bid => bid.status === true) : bid = this.props.sortedBid\n    this.props.currentTask.bids ? myBid = this.props.contractor.bids.find(bid => bid.task.id === this.props.currentTask.id) : myBid = null\n  \n   return this.props.sortedBid?\n     <Card.Group>\n        <Card>\n          <Card.Content >\n\n          {bid.status ? \n          <h1>{bid.contractor_id === this.props.contractor.id? 'Congrats You Won!' : 'Bidding Is Now Over '} </h1> \n\n          : \n          <h3>{myBid ?  `Your current bid is $${myBid.price}` : 'No Bids Yet, Bid now!'}</h3>\n          \n          }\n            <Card.Header></Card.Header>\n            <Card.Meta>\n              {/* {bid.status ? `Winning Bid Was $${bid.price}` : null} */}\n            </Card.Meta>\n            \n          </Card.Content>\n          <Card.Content extra>\n            {!bid.status ? \n\n              <div className=\"ui two buttons\">\n      \n                 <BidModal \n                 makeABid={this.props.makeABid}\n                 contractor={this.props.contractor}\n                 task={this.props.currentTask}\n                 />\n              {myBid ?\n              <Button\n              basic\n              color=\"red\"\n              onClick={(event) => this.props.contractorDeleteBid(event, myBid.id, this.props.contractor)}\n              >Delete Bid</Button>\n                : null}\n              </div>\n\n\n             : null}\n          </Card.Content>\n        </Card>\n      </Card.Group>\n\n\n\n\n     : <Card.Group>\n     <Card>\n       <Card.Content >\n\n       \n       <h3>{myBid ?  `Your current bid is $${myBid.price}` : 'No Bids Yet, Bid now!'}</h3>\n       \n       \n       \n         <Card.Header></Card.Header>\n         <Card.Meta>\n           {/* {bid.status ? `Winning Bid Was $${bid.price}` : null} */}\n         </Card.Meta>\n         \n       </Card.Content>\n       <Card.Content extra>\n         \n\n           <div className=\"ui two buttons\">\n   \n              <BidModal \n              makeABid={this.props.makeABid}\n              contractor={this.props.contractor}\n              task={this.props.currentTask}\n              />\n           {myBid ?\n           <Button\n           basic\n           color=\"red\"\n           onClick={(event) => this.props.contractorDeleteBid(event, myBid.id, this.props.contractor)}\n           >Delete Bid</Button>\n             : null}\n           </div>\n\n\n         \n       </Card.Content>\n     </Card>\n   </Card.Group>\n  };\n\n  showBid = () => {\n    let contBid\n    let bid \n    if (this.props.currentTask.task_done){\n      bid = this.props.currentTask.bids.find(bid => bid.status === true) \n    }\n   else {  \n     bid = this.props.sortedBid \n     contBid = this.props.contractor.bids.find(bid => bid.task.id === this.props.currentTask.id)\n     debugger\n     if (bid && contBid){\n       bid = bid.price < contBid.price ? bid : contBid\n       debugger\n     }\n      \n    }\n   \n     return bid ? bid.price : 0\n   \n  \n  }\n\n\n  yourBid = () => {\n   \n    if(this.props.sortedBid){\n\n              \n\n   return this.props.sortedBid.contractor_id === this.props.contractor.id ? `Congrats You Have The Current Lowest Bid Of $${this.showBid()}` : `Lowest Current Bid: $${this.showBid()}`\n    }\n  }\n\n  render() {\n   \n\n    return (\n      <div>\n        <Link to=\"/profile\">\n          {\" \"}\n        </Link>\n           <h1>\n          Title:{\" \"}\n          <h3>\n            <strong>{this.props.currentTask.name}</strong>\n          </h3>{\" \"}\n        </h1>\n        <h1>\n          Description: <h3>{this.props.currentTask.description}</h3>{\" \"}\n        </h1>\n        <div>\n        {this.props.currentTask.task_done ? <h1> Winning Bid: ${this.showBid()}</h1> : <h3>{this.yourBid()}</h3>}\n        {/* <h1>Lowest Current Bid: ${this.props.sortedBid ? this.props.sortedBid.price: null}</h1> */}\n        </div>\n       \n        <div className=\"bids\">\n              {this.CardExampleGroups()}\n        </div>\n      \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}