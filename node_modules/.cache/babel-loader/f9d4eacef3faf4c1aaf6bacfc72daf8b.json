{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js\";\nimport React from \"react\";\nexport default class ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.sortBids = () => {\n      let sorted = this.props.task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n  }\n\n  render() {\n    // debugger\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.task.name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.task.description), \"Task description Map Bids\", this.sortBids().map(bid => {\n      React.createElement(\"p\", {\n        key: Math.floor(Math.random() * 100000000000 + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Bid: \", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, bid.price, \" by: \", bid.contractor.name));\n    }));\n  }\n\n}\n{\n  this.sortBids().map(bid => {\n    React.createElement(\"p\", {\n      key: Math.floor(Math.random() * 100000000000 + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Bid: \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, bid.price, \" by: \", bid.contractor.name));\n  });\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js"],"names":["React","ProfileContainer","Component","sortBids","sorted","props","task","bids","sort","a","b","price","render","name","description","map","bid","Math","floor","random","contractor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,eAAe,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAG1DC,QAH0D,GAG/C,MAAM;AACb,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,IAArB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAA9D,CAAb;AACA,aAAOP,MAAP;AACD,KANuD;AAAA;;AAQ1DQ,EAAAA,MAAM,GAAG;AACL;AACJ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,IAArB,CADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKR,KAAL,CAAWC,IAAX,CAAgBQ,WAArB,CAFL,+BAMc,KAAKX,QAAL,GAAgBY,GAAhB,CAAoBC,GAAG,IAAI;AACvB;AAAG,QAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,YAAjB,GAAiC,CAA5C,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIH,GAAG,CAACL,KAAR,WAAoBK,GAAG,CAACI,UAAJ,CAAeP,IAAnC,CADR;AAGH,KAJD,CANd,CADF;AAgBD;;AA1B2D;AA6B9D;AACI,OAAKV,QAAL,GAAgBY,GAAhB,CAAoBC,GAAG,IAAI;AACvB;AAAG,MAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,YAAjB,GAAiC,CAA5C,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,GAAG,CAACL,KAAR,WAAoBK,GAAG,CAACI,UAAJ,CAAeP,IAAnC,CADR;AAGH,GAJD;AAKH","sourcesContent":["import React from \"react\";\n\n\n\nexport default class ProfileContainer extends React.Component {\n \n \n    sortBids = () => {\n        let sorted = this.props.task.bids.sort((a, b) => (a.price > b.price ? 1 : -1));\n        return sorted\n      }\n \n    render() {\n        // debugger\n    return (\n      <div>\n           <h1>{this.props.task.name}</h1>\n           <h1>{this.props.task.description}</h1>\n           Task description\n            Map Bids\n                {\n                    this.sortBids().map(bid => {\n                        <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n                           Bid: <p>{bid.price} by: {bid.contractor.name}</p>\n                        </p>\n                    })\n                }    \n            \n      </div>\n    );\n  }\n}\n\n{\n    this.sortBids().map(bid => {\n        <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n           Bid: <p>{bid.price} by: {bid.contractor.name}</p>\n        </p>\n    })\n}  "]},"metadata":{},"sourceType":"module"}