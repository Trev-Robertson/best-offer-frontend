{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorProfileContainer.js\";\nimport React from \"react\"; // import store from '../redux/store'\n\nimport ContractorProfile from '../components/ContractorProfile';\nimport TaskShowPage from \"../components/TaskShowPage\";\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nexport default class ContractorProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url, \"/task/:id\"),\n      render: props => {\n        debugger;\n        let taskObj = this.state.currentContractor.bids.find(bid => bid.task.id == props.match.params.id);\n        debugger;\n        return React.createElement(TaskShowPage, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(this.props.match.url),\n      render: () => {\n        debugger;\n        React.createElement(ContractorProfile, {\n          contractor: this.props.contractor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorProfileContainer.js"],"names":["React","ContractorProfile","TaskShowPage","BrowserRouter","Router","Route","Switch","Redirect","ContractorProfileContainer","Component","state","render","props","match","url","taskObj","currentContractor","bids","find","bid","task","id","params","contractor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SACE;AACAC,aAAa,IAAIC,MAFnB,EAGEC,KAHF,EAIEC,MAJF,EAKEC,QALF,QAMO,kBANP;AAQA,eAAe,MAAMC,0BAAN,SAAyCR,KAAK,CAACS,SAA/C,CAAyD;AAAA;AAAA;AAAA,SACtEC,KADsE,GAC9D,EAD8D;AAAA;;AAGtEC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAK,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAtB,cAFN;AAGE,MAAA,MAAM,EAAEF,KAAK,IAAI;AACf;AACA,YAAIG,OAAO,GAAG,KAAKL,KAAL,CAAWM,iBAAX,CAA6BC,IAA7B,CAAkCC,IAAlC,CACZC,GAAG,IAAIA,GAAG,CAACC,IAAJ,CAASC,EAAT,IAAeT,KAAK,CAACC,KAAN,CAAYS,MAAZ,CAAmBD,EAD7B,CAAd;AAGA;AAEA,eAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAiBE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAK,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,GAAtB,CAFN;AAGE,MAAA,MAAM,EAAE,MAAM;AACZ;AACA,4BAAC,iBAAD;AAAmB,UAAA,UAAU,EAAE,KAAKF,KAAL,CAAWW,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACC,OANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AA4BD;;AAjCqE","sourcesContent":["import React from \"react\";\n// import store from '../redux/store'\nimport ContractorProfile from '../components/ContractorProfile'\nimport TaskShowPage from \"../components/TaskShowPage\";\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nexport default class ContractorProfileContainer extends React.Component {\n  state = {};\n\n  render() {\n    \n    return (\n      <div>\n        {/* <ContractorProfile contractor={this.props.contractor}/> */}\n\n        <Route\n          exact\n          path={`${this.props.match.url}/task/:id`}\n          render={props => { \n            debugger\n            let taskObj = this.state.currentContractor.bids.find(\n              bid => bid.task.id == props.match.params.id\n            );\n            debugger\n            \n            return <TaskShowPage />\n          }}\n        />\n\n        <Route\n          exact\n          path={`${this.props.match.url}`}\n          render={() => {\n            debugger\n            <ContractorProfile contractor={this.props.contractor}/>\n            }}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}