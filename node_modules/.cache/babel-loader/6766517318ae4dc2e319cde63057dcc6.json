{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ProfileContainer.js\";\nimport React from \"react\"; // import store from '../redux/store'\n\nimport Profile from \"../components/profile\";\nexport default class ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showProfile: true,\n      task: null\n    };\n\n    this.showTaskPage = task => {\n      this.setState({\n        task: task,\n        showProfile: !this.state.showProfile\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(Profile, {\n      user: this.props.user,\n      showTaskPage: this.showTaskPage,\n      tasks: this.props.tasks,\n      addTask: this.props.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n  }\n\n}\n{\n  /* <Switch>\n           {this.state.showTaskPage ? (\n             <Route\n               exact\n               path={`${this.props.match.url}/task/:id`}\n               render={routerProps => {\n                 // let taskObj = this.props.contractor.bids.find(\n                 //   bid => bid.task.id == props.match.params.id\n                 // )\n                  return (\n                   <ContractorTaskShowPage\n                     id={routerProps.match.params.id}\n                     contractor={this.props.contractor}\n                     makeABid={this.props.makeABid}\n                     contractorDeleteBid={this.props.contractorDeleteBid}\n                     routerProps={routerProps}\n                     anyBidsSelected={this.state.anyBidsSelected}\n                     sortedBid={this.state.sortedBid}\n                     currentTask={this.state.currentTask}\n                     updateCurrentTask={this.updateCurrentTask}\n                   />\n                 );\n               }}\n             />\n           ) : (\n             <Redirect to=\"/opentasks\" />\n           )}\n            <Route\n             path={`${this.props.match.url}`}\n             render={routerProps => {\n               return (\n                 <ContractorProfile\n                   contractor={this.props.contractor}\n                   routerProps={routerProps}\n                 />\n               );\n             }}\n           />\n         </Switch> */\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ProfileContainer.js"],"names":["React","Profile","ProfileContainer","Component","state","showProfile","task","showTaskPage","setState","render","props","user","tasks","addTask"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC5DC,KAD4D,GACpD;AACNC,MAAAA,WAAW,EAAE,IADP;AAENC,MAAAA,IAAI,EAAE;AAFA,KADoD;;AAAA,SAM5DC,YAN4D,GAM7CD,IAAI,IAAI;AACrB,WAAKE,QAAL,CAAc;AACZF,QAAAA,IAAI,EAAEA,IADM;AAEZD,QAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAFb,OAAd;AAID,KAX2D;AAAA;;AAa5DI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IADnB;AAEE,MAAA,YAAY,EAAE,KAAKJ,YAFrB;AAGE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,KAHpB;AAIE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAYD;;AA1B2D;AA6B9D;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCoB","sourcesContent":["import React from \"react\";\n// import store from '../redux/store'\nimport Profile from \"../components/profile\";\n\nexport default class ProfileContainer extends React.Component {\n  state = {\n    showProfile: true,\n    task: null\n  };\n\n  showTaskPage = task => {\n    this.setState({\n      task: task,\n      showProfile: !this.state.showProfile\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <Profile\n            user={this.props.user}\n            showTaskPage={this.showTaskPage}\n            tasks={this.props.tasks}\n            addTask={this.props.addTask}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n{/* <Switch>\n          {this.state.showTaskPage ? (\n            <Route\n              exact\n              path={`${this.props.match.url}/task/:id`}\n              render={routerProps => {\n                // let taskObj = this.props.contractor.bids.find(\n                //   bid => bid.task.id == props.match.params.id\n                // )\n\n                return (\n                  <ContractorTaskShowPage\n                    id={routerProps.match.params.id}\n                    contractor={this.props.contractor}\n                    makeABid={this.props.makeABid}\n                    contractorDeleteBid={this.props.contractorDeleteBid}\n                    routerProps={routerProps}\n                    anyBidsSelected={this.state.anyBidsSelected}\n                    sortedBid={this.state.sortedBid}\n                    currentTask={this.state.currentTask}\n                    updateCurrentTask={this.updateCurrentTask}\n                  />\n                );\n              }}\n            />\n          ) : (\n            <Redirect to=\"/opentasks\" />\n          )}\n\n          <Route\n            path={`${this.props.match.url}`}\n            render={routerProps => {\n              return (\n                <ContractorProfile\n                  contractor={this.props.contractor}\n                  routerProps={routerProps}\n                />\n              );\n            }}\n          />\n        </Switch> */}"]},"metadata":{},"sourceType":"module"}