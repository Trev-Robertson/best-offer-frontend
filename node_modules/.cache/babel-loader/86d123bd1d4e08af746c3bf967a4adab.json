{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js\";\nimport React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport BidModal from './BidModal';\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class ContractorTaskShowPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anyBidsSelected: false,\n      sortedBids: [],\n      currentTask: []\n    };\n\n    this.sortBids = bids => {\n      let sorted = bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n\n    this.bidAccepted = bid => {\n      this.setState({\n        anyBidsSelected: true\n      }, () => this.props.acceptBid(bid, this.props.task));\n    };\n\n    this.bidDeclined = bid => {\n      if (bid.status) {\n        this.setState({\n          anyBidsSelected: false\n        }, () => this.props.deleteBid(bid));\n      } else {\n        this.props.deleteBid(bid);\n      }\n    };\n\n    this.componentDidMount = () => {\n      fetch(TASKS + this.props.id).then(res => res.json()).then(task => {\n        console.log(task);\n        let sortedBids = this.sortBids(task.bids);\n        this.setState({\n          currentTask: task,\n          sortedBids: sortedBids\n        });\n        task.bids.forEach(bid => {\n          if (bid.status) {\n            this.setState({\n              anyBidsSelected: true\n            });\n          }\n        });\n      });\n    };\n\n    this.CardExampleGroups = () => {\n      let bid;\n      let myBid;\n      this.state.currentTask.task_done ? bid = this.state.currentTask.bids.find(bid => bid.status === true) : bid = this.state.sortedBids[0];\n      this.state.currentTask.task_done ? myBid = this.state.currentTask.bids.find(bid => bid.contractor_id === this.props.contractor.id) : myBid = \"No Bids Yet\"; // debugger\n\n      return this.state.sortedBids[0] ? React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, bid.status ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, bid.contractor_id === this.props.contractor.id ? 'Congrats You Won!' : 'Bidding Is Now Over ', \" \") : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, myBid ? \"Your current bid is \".concat(myBid.price) : 'No Bids Yet, Bid now!'), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, !bid.status ? React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(BidModal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })) // <div className=\"ui two buttons\">\n      // <Button\n      //   disabled={bid.status}\n      //   onClick={() => console.log('click')}\n      //   basic\n      //   color=\"blue\"\n      // >\n      //   Make a Bid\n      // </Button>\n      // </div>\n      : null))) : null;\n    };\n\n    this.showBid = () => {\n      let bid;\n\n      if (this.state.currentTask.task_done) {\n        bid = this.state.currentTask.bids.find(bid => bid.status === true);\n      } else {\n        bid = this.state.sortedBids[0];\n      }\n\n      return bid ? bid.price : 0;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Title:\", \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.currentTask.name)), \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.currentTask.description), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.currentTask.task_done ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" Winning Bid: $\", this.showBid()) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Lowest Current Bid: $\", this.showBid())), React.createElement(\"div\", {\n      className: \"bids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.CardExampleGroups()));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js"],"names":["React","Button","Card","Image","Link","BidModal","TASKS","ContractorTaskShowPage","Component","state","anyBidsSelected","sortedBids","currentTask","sortBids","bids","sorted","sort","a","b","price","bidAccepted","bid","setState","props","acceptBid","task","bidDeclined","status","deleteBid","componentDidMount","fetch","id","then","res","json","console","log","forEach","CardExampleGroups","myBid","task_done","find","contractor_id","contractor","showBid","render","name","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport BidModal from './BidModal'\n\nconst TASKS = \"http://localhost:3000/tasks/\"\n\nexport default class ContractorTaskShowPage extends React.Component {\n  state = {\n    anyBidsSelected: false,\n    sortedBids: [],\n    currentTask: []\n  };\n\n  sortBids = (bids) => {\n   \n\n    let sorted = bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    \n    return sorted;\n  };\n\n  bidAccepted = bid => {\n    this.setState(\n      {\n        anyBidsSelected: true\n      },\n      () => this.props.acceptBid(bid, this.props.task)\n    );\n  };\n\n  bidDeclined = bid => {\n    if (bid.status) {\n      this.setState(\n        {\n          anyBidsSelected: false\n        },\n        () => this.props.deleteBid(bid)\n      );\n    } else {\n      this.props.deleteBid(bid);\n    }\n  };\n\n  componentDidMount = () => {\n\n    fetch(TASKS + this.props.id)\n    .then(res => res.json())\n    .then(task => {\n      console.log(task)\n      let sortedBids = this.sortBids(task.bids)\n      this.setState({\n        currentTask: task, \n        sortedBids: sortedBids\n      })\n      task.bids.forEach(bid => {\n      if (bid.status) {\n        this.setState({\n          anyBidsSelected: true\n        });\n      }\n    });\n  });\n  };\n\n  CardExampleGroups = () => {\n    let bid\n    let myBid \n    this.state.currentTask.task_done ? bid = this.state.currentTask.bids.find(bid => bid.status === true) : bid = this.state.sortedBids[0]\n    this.state.currentTask.task_done ? myBid = this.state.currentTask.bids.find(bid => bid.contractor_id === this.props.contractor.id) : myBid = \"No Bids Yet\"\n    // debugger\n   return this.state.sortedBids[0] ?\n     <Card.Group>\n        <Card>\n          <Card.Content >\n\n          {bid.status ? \n          <h1>{bid.contractor_id === this.props.contractor.id? 'Congrats You Won!' : 'Bidding Is Now Over '} </h1> \n\n          : \n          <h3>{myBid ? `Your current bid is ${myBid.price}` : 'No Bids Yet, Bid now!'}</h3>\n          \n          }\n            <Card.Header></Card.Header>\n            <Card.Meta>\n              {/* {bid.status ? `Winning Bid Was $${bid.price}` : null} */}\n            </Card.Meta>\n            \n          </Card.Content>\n          <Card.Content extra>\n            {!bid.status ? \n\n              <div className=\"ui two buttons\">\n      \n                 <BidModal />\n         \n              \n              </div>\n\n              // <div className=\"ui two buttons\">\n              // <Button\n              //   disabled={bid.status}\n              //   onClick={() => console.log('click')}\n              //   basic\n              //   color=\"blue\"\n              // >\n              //   Make a Bid\n              // </Button>\n              // </div>\n             : null}\n          </Card.Content>\n        </Card>\n      </Card.Group>\n     : null\n  };\n\n  showBid = () => {\n    \n    let bid \n    if (this.state.currentTask.task_done){\n      bid = this.state.currentTask.bids.find(bid => bid.status === true) \n    }\n   else {  \n     bid = this.state.sortedBids[0]\n    }\n     return bid ? bid.price : 0\n   \n  \n  }\n\n  render() {\n  \n    return (\n      <div>\n        <Link to=\"/profile\">\n          {\" \"}\n        </Link>\n           <h1>\n          Title:{\" \"}\n          <h3>\n            <strong>{this.state.currentTask.name}</strong>\n          </h3>{\" \"}\n        </h1>\n        <h1>\n          Description: <h3>{this.state.currentTask.description}</h3>{\" \"}\n        </h1>\n        <div>\n        {this.state.currentTask.task_done ? <h1> Winning Bid: ${this.showBid()}</h1> : <h1>Lowest Current Bid: ${this.showBid()}</h1>}\n        {/* <h1>Lowest Current Bid: ${this.state.sortedBids[0]? this.state.sortedBids[0].price: null}</h1> */}\n        </div>\n       \n        <div className=\"bids\">\n              {this.CardExampleGroups()}\n        </div>\n        {/* <BidModal /> */}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}