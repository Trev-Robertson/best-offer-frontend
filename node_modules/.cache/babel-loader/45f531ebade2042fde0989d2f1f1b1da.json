{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorsContainer.js\";\nimport React from \"react\";\nimport ContractorShowPage from \"../components/ContractorShowPage\";\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nconst URL = 'http://localhost:3000/contractors';\nexport default class ContractorsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allContractors: null\n    };\n\n    this.ok = contractor => {\n      return React.createElement(\"div\", {\n        key: contractor.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, contractor.name, \" \", contractor.specialties);\n    };\n  }\n\n  componentDidMount() {\n    fetch(URL).then(res => res.json()).then(allContractors => this.setState({\n      allContractors\n    }));\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(this.state.allContractors);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Contractor Container\", this.state.allContractors ? this.state.allContractors.map(contractor => {\n      this.ok(contractor);\n    }) : null, React.createElement(Route, {\n      path: \"\".concat(this.props.match.url, \"/:id\"),\n      component: ContractorShowPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/containers/ContractorsContainer.js"],"names":["React","ContractorShowPage","BrowserRouter","Router","Route","Switch","Redirect","URL","ContractorsContainer","Component","state","allContractors","ok","contractor","id","name","specialties","componentDidMount","fetch","then","res","json","setState","render","console","log","props","map","match","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,SACE;AACAC,aAAa,IAAIC,MAFnB,EAGEC,KAHF,EAIEC,MAJF,EAKEC,QALF,QAMO,kBANP;AAUA,MAAMC,GAAG,GAAG,mCAAZ;AAEA,eAAe,MAAMC,oBAAN,SAAmCR,KAAK,CAACS,SAAzC,CAAmD;AAAA;AAAA;AAAA,SAE9DC,KAF8D,GAEtD;AACJC,MAAAA,cAAc,EAAE;AADZ,KAFsD;;AAAA,SAc9DC,EAd8D,GAcxDC,UAAD,IAAe;AAEhB,aAAO;AAAK,QAAA,GAAG,EAAEA,UAAU,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BD,UAAU,CAACE,IAArC,OAA4CF,UAAU,CAACG,WAAvD,CAAP;AACH,KAjB6D;AAAA;;AAO9DC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAACX,GAAD,CAAL,CACCY,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMR,cAAc,IAAI,KAAKW,QAAL,CAAc;AAACX,MAAAA;AAAD,KAAd,CAFxB;AAGD;;AASDY,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,cAAvB;AAEE,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAGK,KAAKD,KAAL,CAAWC,cAAX,GAA4B,KAAKD,KAAL,CAAWC,cAAX,CAA0BgB,GAA1B,CAA8Bd,UAAU,IAAI;AACvE,WAAKD,EAAL,CAAQC,UAAR;AAED,KAH4B,CAA5B,GAGE,IANP,EASI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAK,KAAKa,KAAL,CAAWE,KAAX,CAAiBC,GAAtB,SAAX;AAA4C,MAAA,SAAS,EAAE5B,kBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADF;AAcD;;AAtC2D","sourcesContent":["import React from \"react\";\nimport ContractorShowPage from \"../components/ContractorShowPage\"\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\n\n\nconst URL = 'http://localhost:3000/contractors'\n\nexport default class ContractorsContainer extends React.Component {\n\n    state = {\n        allContractors: null\n    }\n\n\n    componentDidMount(){\n      fetch(URL)\n      .then(res => res.json())\n      .then(allContractors => this.setState({allContractors}))\n    }\n\n\n    ok = (contractor) =>{\n\n        return <div key={contractor.id}>{contractor.name} {contractor.specialties}</div>\n    }\n\n\n    render() {\n      console.log(this.props)\n      console.log(this.state.allContractors)\n      \n        return (\n          <div >\n              Contractor Container\n\n              {this.state.allContractors ? this.state.allContractors.map(contractor => {\n                this.ok(contractor)\n\n              }):null}\n\n\n              <Route path={`${this.props.match.url}/:id`} component={ContractorShowPage}/>\n\n          </div>\n        );\n      }\n\n\n}"]},"metadata":{},"sourceType":"module"}