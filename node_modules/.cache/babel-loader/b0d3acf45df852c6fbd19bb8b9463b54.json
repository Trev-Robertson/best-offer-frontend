{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport ContractorProfileContainer from \"./containers/ContractorProfileContainer\";\nimport ContractorsContainer from \"./containers/ContractorsContainer\";\nimport TaskShowPage from \"./components/TaskShowPage\"; // import ContractorShowPage from \"./components/ContractorShowPage\"\n\nimport { isEmpty } from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"; // import ContractorShowPage from \"./components/ContractorShowPage\";\n\nconst specialties = [\"gardening\", \"plumbing\", \"technology\", \"electrician\", \"carpentry\"];\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst CONTRACTOR_URL = \"http://localhost:3000/api/v1/contractor\";\nconst PROFILE_URL = \"http://localhost:3000/api/v1/profile/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nconst BIDS_URL = 'http://localhost:3000/bids/';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: {},\n      loading: true,\n      removeTask: true,\n      tasks: {},\n      currentContractor: {}\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        currentUser: user,\n        loading: false,\n        tasks: user.tasks,\n        currentContractor: {}\n      });\n    };\n\n    this.refreshContractor = user => {\n      this.setState({\n        currentContractor: user,\n        loading: false,\n        currentUser: {}\n      });\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.setState({\n        currentUser: {},\n        currentContractor: {}\n      });\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        fetch(localStorage.getItem(\"contractor\") === 'true' ? CONTRACTOR_URL : PROFILE_URL, {\n          headers: {\n            Authentication: \"Bearer \".concat(localStorage.getItem(\"token\"))\n          }\n        }).then(res => res.json()).then(res => {\n          localStorage.getItem(\"contractor\") === 'true' ? this.refreshContractor(res) : this.updateUser(res);\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleUser = (event, newUser, contractors) => {\n      event.preventDefault();\n      let contractor;\n\n      if (contractors) {\n        contractor = \"contractor\";\n      }\n\n      let data = {\n        name: event.target.name.value,\n        password: event.target.password.value,\n        new_user: newUser\n      };\n      fetch(URL + (contractors ? contractor : \"\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => {\n        if (data.authenticated && contractor === \"contractor\") {\n          localStorage.setItem(\"token\", data.token);\n          localStorage.setItem(\"contractor\", true);\n          this.setState({\n            currentContractor: JSON.parse(data.user),\n            currentUser: {}\n          });\n        } else {\n          if (data.authenticated) {\n            localStorage.setItem(\"contractor\", false);\n            localStorage.setItem(\"token\", data.token);\n            this.setState({\n              currentUser: JSON.parse(data.user),\n              currentContractor: {}\n            });\n          }\n        }\n      });\n    };\n\n    this.acceptBid = (bid, task) => {\n      if (!bid.status) {\n        let data = {\n          task: {\n            id: task.id,\n            task_done: true,\n            user_id: this.state.currentUser.id,\n            bids_attributes: {\n              id: bid.id,\n              status: true\n            }\n          }\n        };\n        fetch(\"http://localhost:3000/tasks/\".concat(task.id), {\n          method: \"PATCH\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }).then(res => res.json()).then(currentUser => this.setState({\n          currentUser\n        }));\n      }\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.headline.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.state.currentUser.id\n      };\n      event.target.reset();\n      fetch(TASKS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        console.log(\"end\", currentUser);\n        let updateUser = this.state.currentUser;\n        updateUser.tasks = currentUser.tasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n    };\n\n    this.deleteBid = bid => {\n      let data = {\n        id: bid.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/bids/\".concat(bid.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        this.updateUser(currentUser);\n      });\n    };\n\n    this.contractorDeleteBid = bid => {\n      let data = {\n        id: bid.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/bids/\".concat(bid.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        this.updateUser(currentUser);\n      });\n    };\n\n    this.deleteTask = task => {\n      let data = {\n        id: task.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/tasks/\".concat(task.id), {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(updatedUser => {\n        let updateUser = this.state.currentUser;\n        let currentUserTasks = updateUser.tasks.filter(t => t.id !== task.id);\n        updateUser.tasks = currentUserTasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n    };\n\n    this.makeABid = (event, {\n      value\n    }, contractor, task) => {\n      event.preventDefault();\n      let currentBid = contractor.bids.find(bid => bid.task.id === task.id);\n\n      if (value >= 0) {\n        value = Math.round(value);\n        let data = {\n          price: value,\n          contractor_id: contractor.id,\n          task_id: task.id\n        };\n        fetch(BIDS_URL + (currentBid ? currentBid.id : ''), {\n          method: currentBid ? 'PATCH' : 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }).then(res => res.json()).then(currentContractor => {\n          alert(\"Bid Successful!\");\n          console.log(currentContractor.bids);\n          this.setState(_objectSpread({}, this.state, {\n            currentContractor\n          }));\n        });\n      } else {\n        alert(\"Bid must be greater than zero, and a whole number\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: \"50vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"BEST OFFER OR ELSE\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, !isEmpty(this.state.currentUser) ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"To Profile Page\")), React.createElement(Link, {\n      to: \"/contractors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"View Contractors\")), React.createElement(\"button\", {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Logout\")) : null, !isEmpty(this.state.currentContractor) ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Logout\")) : null), !this.state.loading ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/contractor\",\n      render: routerProps => {\n        return !isEmpty(this.state.currentContractor) ? React.createElement(ContractorProfileContainer, Object.assign({}, routerProps, {\n          contractor: this.state.currentContractor // task={taskObj}\n          // currentTask={this.currentTask}\n          ,\n          acceptBid: this.acceptBid,\n          ContractorDeleteBid: this.deleteBid,\n          deleteTask: this.deleteTask,\n          makeABid: this.makeABid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login/contractor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login/contractor\",\n      render: props => {\n        return !isEmpty(this.state.currentContractor) ? React.createElement(Redirect, {\n          to: \"/contractor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }) : React.createElement(Login, {\n          handleUser: this.handleUser,\n          newUser: false,\n          contractor: true,\n          routerProps: props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => {\n        return !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366\n          },\n          __self: this\n        }) : React.createElement(Login, {\n          handleUser: this.handleUser,\n          newUser: false,\n          contractor: false,\n          routerProps: props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        newUser: true,\n        routerProps: props,\n        contractor: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: () => {\n        return !isEmpty(this.state.currentUser) ? React.createElement(ProfileContainer, {\n          user: this.state.currentUser,\n          specialties: specialties,\n          tasks: this.state.tasks,\n          addTask: this.addTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/contractors\",\n      render: routerProps => {\n        return !isEmpty(this.state.currentUser) ? React.createElement(ContractorsContainer, Object.assign({\n          user: this.state.currentUser,\n          specialties: specialties,\n          currentTask: this.currentTask\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup/contractor\",\n      render: props => !isEmpty(this.state.currentContractor) ? React.createElement(Redirect, {\n        to: \"/contractor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        contractor: true,\n        routerProps: props,\n        newUser: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? React.createElement(Route, {\n      exact: true,\n      path: \"/task/:id\",\n      render: props => {\n        let taskObj = this.state.currentUser.tasks.find(task => task.id == props.match.params.id);\n        return !isEmpty(taskObj) ? React.createElement(TaskShowPage, {\n          task: taskObj,\n          acceptBid: this.acceptBid,\n          deleteBid: this.deleteBid,\n          deleteTask: this.deleteTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }) : React.createElement(Redirect, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js"],"names":["React","Login","ProfileContainer","ContractorProfileContainer","ContractorsContainer","TaskShowPage","isEmpty","Link","BrowserRouter","Router","Route","Switch","Redirect","specialties","URL","CONTRACTOR_URL","PROFILE_URL","TASKS","BIDS_URL","App","Component","state","currentUser","loading","removeTask","tasks","currentContractor","updateUser","user","setState","refreshContractor","logout","localStorage","clear","componentDidMount","getItem","fetch","headers","Authentication","then","res","json","handleUser","event","newUser","contractors","preventDefault","contractor","data","name","target","value","password","new_user","method","body","JSON","stringify","authenticated","setItem","token","parse","acceptBid","bid","task","status","id","task_done","user_id","bids_attributes","addTask","headline","description","specialty_id","specialty","reset","console","log","deleteBid","contractorDeleteBid","deleteTask","updatedUser","currentUserTasks","filter","t","makeABid","currentBid","bids","find","Math","round","price","contractor_id","task_id","alert","render","height","routerProps","props","currentTask","taskObj","match","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport ContractorProfileContainer from \"./containers/ContractorProfileContainer\";\nimport ContractorsContainer from \"./containers/ContractorsContainer\";\nimport TaskShowPage from \"./components/TaskShowPage\";\n// import ContractorShowPage from \"./components/ContractorShowPage\"\nimport { isEmpty } from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n// import ContractorShowPage from \"./components/ContractorShowPage\";\nconst specialties = [\n  \"gardening\",\n  \"plumbing\",\n  \"technology\",\n  \"electrician\",\n  \"carpentry\"\n];\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst CONTRACTOR_URL = \"http://localhost:3000/api/v1/contractor\";\nconst PROFILE_URL = \"http://localhost:3000/api/v1/profile/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nconst BIDS_URL = 'http://localhost:3000/bids/'\n\nexport default class App extends React.Component {\n  state = {\n    currentUser: {},\n    loading: true,\n    removeTask: true,\n    tasks: {},\n    currentContractor: {}\n  };\n\n  updateUser = user => {\n    this.setState({\n      currentUser: user,\n      loading: false,\n      tasks: user.tasks,\n      currentContractor: {}\n    });\n  };\n\n  refreshContractor = user => {\n    this.setState({\n      currentContractor: user,\n      loading: false,\n      currentUser: {}\n    });\n  };\n\n  logout = () => {\n    localStorage.clear();\n    this.setState({\n      currentUser: {},\n      currentContractor: {}\n    });\n  };\n\n  componentDidMount = () => {\n    if (localStorage.getItem(\"token\")) {\n      fetch(localStorage.getItem(\"contractor\") === 'true' ? CONTRACTOR_URL : PROFILE_URL, {\n        headers: { Authentication: `Bearer ${localStorage.getItem(\"token\")}` }\n      })\n        .then(res => res.json())\n        .then(res => {\n        \n          localStorage.getItem(\"contractor\") ==='true'\n            ? this.refreshContractor(res)\n            : this.updateUser(res);\n        });\n    } else {\n      this.setState({ loading: false });\n    }\n  };\n\n  handleUser = (event, newUser, contractors) => {\n    event.preventDefault();\n    let contractor;\n    if (contractors) {\n      contractor = \"contractor\";\n    }\n\n    let data = {\n      name: event.target.name.value,\n      password: event.target.password.value,\n      new_user: newUser\n    };\n\n    fetch(URL + (contractors ? contractor : \"\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(data => {\n\n        if (data.authenticated && contractor === \"contractor\") {\n          localStorage.setItem(\"token\", data.token);\n          localStorage.setItem(\"contractor\", true);\n\n          this.setState({\n            currentContractor: JSON.parse(data.user),\n            currentUser: {}\n          });\n        } else {\n          if (data.authenticated) {\n            localStorage.setItem(\"contractor\", false);\n            localStorage.setItem(\"token\", data.token);\n            this.setState({\n              currentUser: JSON.parse(data.user),\n              currentContractor: {}\n            });\n          }\n        }\n      });\n  };\n\n  acceptBid = (bid, task) => {\n    if (!bid.status) {\n      let data = {\n        task: {\n          id: task.id,\n          task_done: true,\n          user_id: this.state.currentUser.id,\n          bids_attributes: {\n            id: bid.id,\n            status: true\n          }\n        }\n      };\n\n      fetch(`http://localhost:3000/tasks/${task.id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      })\n        .then(res => res.json())\n        .then(currentUser => this.setState({ currentUser }));\n    }\n  };\n\n  addTask = event => {\n    event.preventDefault();\n    let data = {\n      name: event.target.headline.value,\n      description: event.target.description.value,\n      specialty_id: event.target.specialty.value,\n      user_id: this.state.currentUser.id\n    };\n    event.target.reset();\n\n    fetch(TASKS, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser => {\n        console.log(\"end\", currentUser);\n        let updateUser = this.state.currentUser;\n        updateUser.tasks = currentUser.tasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n  };\n\n  deleteBid = bid => {\n    let data = {\n      id: bid.id,\n      user_id: this.state.currentUser.id\n    };\n    fetch(`http://localhost:3000/bids/${bid.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser => {\n        this.updateUser(currentUser);\n      });\n  };\n\n\n  contractorDeleteBid = bid => {\n    let data = {\n      id: bid.id,\n      user_id: this.state.currentUser.id\n    };\n    fetch(`http://localhost:3000/bids/${bid.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser => {\n        this.updateUser(currentUser);\n      });\n  }\n\n\n\n\n  deleteTask = task => {\n    let data = {\n      id: task.id,\n      user_id: this.state.currentUser.id\n    };\n    fetch(`http://localhost:3000/tasks/${task.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(updatedUser => {\n        let updateUser = this.state.currentUser;\n        let currentUserTasks = updateUser.tasks.filter(t => t.id !== task.id);\n        updateUser.tasks = currentUserTasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n  };\n\n\n  makeABid = (event, { value }, contractor, task) => {\n    event.preventDefault()\n\n     let currentBid = contractor.bids.find(bid => bid.task.id === task.id)\n\n     if (value >= 0 ){\n       value = Math.round(value)\n       let data ={\n         price: value, \n         contractor_id: contractor.id, \n         task_id: task.id\n        }\n        \n     \n        fetch(BIDS_URL + (currentBid ? currentBid.id : ''), {\n          method: (currentBid ? 'PATCH' : 'POST'),\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(data)\n        })\n          .then(res => res.json())\n          .then(currentContractor => {\n            alert(\"Bid Successful!\")\n            console.log(currentContractor.bids)\n            this.setState({\n              ...this.state,\n              currentContractor\n              \n            })         \n          })\n    }\n    else{\n      alert(\"Bid must be greater than zero, and a whole number\")\n    }\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{ height: \"50vh\" }}>\n        <h1>BEST OFFER OR ELSE</h1>\n        <p>\n          {!isEmpty(this.state.currentUser) ? (\n            <React.Fragment>\n              <Link to=\"/profile\">\n                {\" \"}\n                <button>To Profile Page</button>\n              </Link>\n              <Link to=\"/contractors\">\n                {\" \"}\n                <button>View Contractors</button>\n              </Link>\n              <button onClick={this.logout}>Logout</button>\n            </React.Fragment>\n          ) : null}\n          {!isEmpty(this.state.currentContractor) ? (\n            <React.Fragment>\n              <button onClick={this.logout}>Logout</button>\n            </React.Fragment>\n          ) : null}\n        </p>\n        {!this.state.loading ? (\n          <Switch>\n\n\n\n\n\n            <Route\n              \n              path=\"/contractor\"\n              render={(routerProps) => {\n                \n                 return !isEmpty(this.state.currentContractor) ? (\n                <ContractorProfileContainer \n                {...routerProps} \n                contractor={this.state.currentContractor}\n                // task={taskObj}\n                // currentTask={this.currentTask}\n                    acceptBid={this.acceptBid}\n                    ContractorDeleteBid={this.deleteBid}\n                    deleteTask={this.deleteTask}\n                    makeABid={this.makeABid}\n                \n                />\n                ) : (\n                  <Redirect to=\"/login/contractor\" />\n                )\n              }}\n            />\n\n\n\n\n\n            <Route\n              exact\n              path=\"/login/contractor\"\n              render={props => {\n             \n                return !isEmpty(this.state.currentContractor) ? (\n                  <Redirect to=\"/contractor\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    newUser={false}\n                    contractor={true}\n                    routerProps={props}\n                 \n                  />\n                );\n              }}\n            />\n\n            <Route\n              exact\n              path=\"/login\"\n              render={props => {\n           \n                return !isEmpty(this.state.currentUser) ? (\n                  <Redirect to=\"/profile\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    newUser={false}\n                    contractor={false}\n                    routerProps={props}\n                   \n                  />\n                );\n              }}\n            />\n\n                <Route\n                  exact\n                  path=\"/signup\"\n                  render={props =>\n                    !isEmpty(this.state.currentUser) ? (\n                      <Redirect to=\"/profile\" />\n                    ) : (\n                      <Login\n                        handleUser={this.handleUser}\n                        newUser={true}\n                        routerProps={props}\n                        contractor={false}\n                      />\n                    )\n                  }\n                />\n\n            <Route\n              exact\n              path=\"/profile\"\n              render={() => {\n          \n                return !isEmpty(this.state.currentUser) ? (\n                  <ProfileContainer\n                    user={this.state.currentUser}\n                    specialties={specialties}\n                    tasks={this.state.tasks}\n                    addTask={this.addTask}\n                  />\n                ) : (\n                  <Redirect to=\"/login\" />\n                );\n              }}\n            />\n\n            <Route\n              path=\"/contractors\"\n              render={routerProps => {\n                 return !isEmpty(this.state.currentUser) ?\n                   <ContractorsContainer\n                    user={this.state.currentUser}\n                    specialties={specialties}\n                    currentTask={this.currentTask}\n                    {...routerProps}\n                  /> : <Redirect to=\"/login\" />\n                ;\n              }}\n            />\n\n            <Route\n              path=\"/signup/contractor\"\n              render={props =>\n                !isEmpty(this.state.currentContractor) ? (\n                  <Redirect to=\"/contractor\" />\n                ) : (\n                  <Login\n                    handleUser={this.handleUser}\n                    \n                    contractor={true}\n                    routerProps={props}\n                    newUser={true}\n                   \n                  />\n                )\n              }\n            />\n\n\n            {!isEmpty(this.state.currentUser)  ? (\n              <Route\n                exact\n                path=\"/task/:id\"\n                render={props => {\n                  let taskObj = this.state.currentUser.tasks.find(\n                    task => task.id == props.match.params.id\n                  );\n                \n                  return !isEmpty(taskObj) ? (\n                    <TaskShowPage\n                      task={taskObj}\n                      acceptBid={this.acceptBid}\n                      deleteBid={this.deleteBid}\n                      deleteTask={this.deleteTask}\n                    />\n                  ) : (\n                    <Redirect to=\"/profile\" />\n                  );\n                }}\n              />\n            ) : (\n              <Redirect to=\"/login\" />\n            )}\n\n \n\n            {/* <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} /> */}\n          </Switch>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}