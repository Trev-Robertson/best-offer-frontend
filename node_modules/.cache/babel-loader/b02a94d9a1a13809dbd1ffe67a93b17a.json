{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js\";\nimport React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport BidModal from './BidModal';\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class ContractorTaskShowPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anyBidsSelected: false,\n      sortedBids: [],\n      currentTask: [],\n      currentContractor: []\n    };\n\n    this.sortBids = bids => {\n      let sorted = bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"task show page mounted\");\n      fetch(TASKS + this.props.id).then(res => res.json()).then(task => {\n        let sortedBids = this.sortBids(task.bids);\n        this.setState({\n          currentTask: task,\n          sortedBids: sortedBids\n        });\n        task.bids.forEach(bid => {\n          if (bid.status) {\n            this.setState({\n              anyBidsSelected: true\n            });\n          }\n        });\n      });\n    };\n\n    this.CardExampleGroups = () => {\n      let bid;\n      let myBid;\n      this.state.currentTask.task_done ? bid = this.state.currentTask.bids.find(bid => bid.status === true) : bid = this.state.sortedBids[0];\n      this.state.currentTask.bids ? myBid = this.state.currentTask.bids.find(bid => bid.contractor_id === this.props.contractor.id) : myBid = null;\n      return this.state.sortedBids[0] ? React.createElement(Card.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, bid.status ? React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, bid.contractor_id === this.props.contractor.id ? 'Congrats You Won!' : 'Bidding Is Now Over ', \" \") : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, myBid ? \"Your current bid is $\".concat(myBid.price) : 'No Bids Yet, Bid now!'), React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, !bid.status ? React.createElement(\"div\", {\n        className: \"ui two buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(BidModal, {\n        makeABid: this.props.makeABid,\n        contractor: this.props.contractor,\n        task: this.state.currentTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })) : null))) : null;\n    };\n\n    this.showBid = () => {\n      let bid;\n\n      if (this.state.currentTask.task_done) {\n        bid = this.state.currentTask.bids.find(bid => bid.status === true);\n      } else {\n        bid = this.state.sortedBids[0];\n      }\n\n      return bid ? bid.price : 0;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Title:\", \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.currentTask.name)), \" \"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Description: \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.state.currentTask.description), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, this.state.currentTask.task_done ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" Winning Bid: $\", this.showBid()) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Lowest Current Bid: $\", this.showBid())), React.createElement(\"div\", {\n      className: \"bids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.CardExampleGroups()));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/ContractorTaskShowPage.js"],"names":["React","Button","Card","Image","Link","BidModal","TASKS","ContractorTaskShowPage","Component","state","anyBidsSelected","sortedBids","currentTask","currentContractor","sortBids","bids","sorted","sort","a","b","price","componentDidMount","console","log","fetch","props","id","then","res","json","task","setState","forEach","bid","status","CardExampleGroups","myBid","task_done","find","contractor_id","contractor","makeABid","showBid","render","name","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Card, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport BidModal from './BidModal'\n\nconst TASKS = \"http://localhost:3000/tasks/\"\n\nexport default class ContractorTaskShowPage extends React.Component {\n  state = {\n    anyBidsSelected: false,\n    sortedBids: [],\n    currentTask: [], \n    currentContractor: []\n  };\n\n  sortBids = (bids) => {\n   \n\n    let sorted = bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    \n    return sorted;\n  };\n\n\n\n  componentDidMount = () => {\n      console.log(\"task show page mounted\")\n    fetch(TASKS + this.props.id)\n    .then(res => res.json())\n    .then(task => {\n   \n      let sortedBids = this.sortBids(task.bids)\n      this.setState({\n        currentTask: task, \n        sortedBids: sortedBids\n      })\n      task.bids.forEach(bid => {\n      if (bid.status) {\n        this.setState({\n          anyBidsSelected: true\n        });\n      }\n    });\n  });\n  };\n\n  CardExampleGroups = () => {\n    let bid\n    let myBid \n    this.state.currentTask.task_done ? bid = this.state.currentTask.bids.find(bid => bid.status === true) : bid = this.state.sortedBids[0]\n    this.state.currentTask.bids ? myBid = this.state.currentTask.bids.find(bid => bid.contractor_id === this.props.contractor.id) : myBid = null\n   \n   return this.state.sortedBids[0] ?\n     <Card.Group>\n        <Card>\n          <Card.Content >\n\n          {bid.status ? \n          <h1>{bid.contractor_id === this.props.contractor.id? 'Congrats You Won!' : 'Bidding Is Now Over '} </h1> \n\n          : \n          <h3>{myBid?  `Your current bid is $${myBid.price}` : 'No Bids Yet, Bid now!'}</h3>\n          \n          }\n            <Card.Header></Card.Header>\n            <Card.Meta>\n              {/* {bid.status ? `Winning Bid Was $${bid.price}` : null} */}\n            </Card.Meta>\n            \n          </Card.Content>\n          <Card.Content extra>\n            {!bid.status ? \n\n              <div className=\"ui two buttons\">\n      \n                 <BidModal \n                 makeABid={this.props.makeABid}\n                 contractor={this.props.contractor}\n                 task={this.state.currentTask}\n                 />\n         \n              \n              </div>\n\n\n             : null}\n          </Card.Content>\n        </Card>\n      </Card.Group>\n     : null\n  };\n\n  showBid = () => {\n    \n    let bid \n    if (this.state.currentTask.task_done){\n      bid = this.state.currentTask.bids.find(bid => bid.status === true) \n    }\n   else {  \n     bid = this.state.sortedBids[0]\n    }\n     return bid ? bid.price : 0\n   \n  \n  }\n\n  render() {\n  \n    return (\n      <div>\n        <Link to=\"/profile\">\n          {\" \"}\n        </Link>\n           <h1>\n          Title:{\" \"}\n          <h3>\n            <strong>{this.state.currentTask.name}</strong>\n          </h3>{\" \"}\n        </h1>\n        <h1>\n          Description: <h3>{this.state.currentTask.description}</h3>{\" \"}\n        </h1>\n        <div>\n        {this.state.currentTask.task_done ? <h1> Winning Bid: ${this.showBid()}</h1> : <h1>Lowest Current Bid: ${this.showBid()}</h1>}\n        {/* <h1>Lowest Current Bid: ${this.state.sortedBids[0]? this.state.sortedBids[0].price: null}</h1> */}\n        </div>\n       \n        <div className=\"bids\">\n              {this.CardExampleGroups()}\n        </div>\n      \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}