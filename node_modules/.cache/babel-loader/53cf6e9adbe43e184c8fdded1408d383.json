{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js\";\nimport React from 'react';\nimport { Button, Card, Image } from 'semantic-ui-react';\nexport default class ProfileContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.sortBids = () => {\n      let sorted = this.props.task.bids.sort((a, b) => a.price > b.price ? 1 : -1);\n      return sorted;\n    };\n\n    this.CardExampleGroups = () => React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Image, {\n      floated: \"right\",\n      size: \"mini\",\n      src: \"/images/avatar/large/steve.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Steve Sanders\"), React.createElement(Card.Meta, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Friends of Elliot\"), React.createElement(Card.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Steve wants to add you to the group \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"best friends\"))), React.createElement(Card.Content, {\n      extra: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui two buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Button, {\n      basic: true,\n      color: \"green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Approve\"), React.createElement(Button, {\n      basic: true,\n      color: \"red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Decline\")))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      onClick: this.props.toggleTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Task:\"), \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.task.name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Description:\"), \" \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.task.description), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Bids:\"), this.sortBids().map(bid => {\n      return React.createElement(\"p\", {\n        key: Math.floor(Math.random() * 100000000000 + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"$\", bid.price, \" by \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, bid.contractor.name));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/TaskShowPage.js"],"names":["React","Button","Card","Image","ProfileContainer","Component","sortBids","sorted","props","task","bids","sort","a","b","price","CardExampleGroups","render","toggleTask","name","description","map","bid","Math","floor","random","contractor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,mBAApC;AAEA,eAAe,MAAMC,gBAAN,SAA+BJ,KAAK,CAACK,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAC5DC,QAD4D,GACjD,MAAM;AACf,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,IAArB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,KACrCD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CADd,CAAb;AAGA,aAAOP,MAAP;AACD,KAN2D;;AAAA,SAS9DQ,iBAT8D,GAS1C,MAChB,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAC,gCAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,EAOE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,EAQE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADtC,CARF,CADF,EAaE,oBAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,oBAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,KAAK,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF,CAbF,CADF,CAV0D;AAAA;;AAuC5DC,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,OACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,IAArB,CADlB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,OAEwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWC,IAAX,CAAgBU,WAArB,CAFxB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIG,KAAKb,QAAL,GAAgBc,GAAhB,CAAoBC,GAAG,IAAI;AAC1B,aACE;AAAG,QAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,YAAjB,GAAiC,CAA5C,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACIH,GAAG,CAACP,KADR,UACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASO,GAAG,CAACI,UAAJ,CAAeP,IAAxB,CADlB,CADF;AAKD,KANA,CAJH,CADF;AAcD;;AAvD2D","sourcesContent":["import React from 'react'\nimport { Button, Card, Image } from 'semantic-ui-react'\n\nexport default class ProfileContainer extends React.Component {\n  sortBids = () => {\n    let sorted = this.props.task.bids.sort((a, b) =>\n      a.price > b.price ? 1 : -1\n    );\n    return sorted;\n  };\n\n\nCardExampleGroups = () => (\n    <Card.Group>\n      <Card>\n        <Card.Content>\n          <Image\n            floated='right'\n            size='mini'\n            src='/images/avatar/large/steve.jpg'\n          />\n          <Card.Header>Steve Sanders</Card.Header>\n          <Card.Meta>Friends of Elliot</Card.Meta>\n          <Card.Description>\n            Steve wants to add you to the group <strong>best friends</strong>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <div className='ui two buttons'>\n            <Button basic color='green'>\n              Approve\n            </Button>\n            <Button basic color='red'>\n              Decline\n            </Button>\n          </div>\n        </Card.Content>\n      </Card>\n    </Card.Group>\n  )\n\n\n  render() {\n    \n    return (\n      <div onClick={this.props.toggleTask}>\n        <h1 >Task:</h1> <h3>{this.props.task.name}</h3>\n        <h1>Description:</h1> <h3>{this.props.task.description}</h3>\n        <h1>Bids:</h1>\n        {this.sortBids().map(bid => {\n          return (\n            <p key={Math.floor((Math.random() * 100000000000) + 1)}>\n              ${bid.price} by <strong>{bid.contractor.name}</strong>\n            </p>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}