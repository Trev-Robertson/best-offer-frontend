{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport ContractorsContainer from \"./containers/ContractorsContainer\";\nimport TaskShowPage from \"./components/TaskShowPage\"; // import ContractorShowPage from \"./components/ContractorShowPage\"\n\nimport { isEmpty } from \"lodash\";\nimport { Link } from 'react-router-dom';\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"; // import ContractorShowPage from \"./components/ContractorShowPage\";\n\nconst specialties = [\"gardening\", \"plumbing\", \"technology\", \"electrician\", \"carpentry\"];\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst CONTRACTOR_URL = \"http://localhost:3000/api/v1/login/contractors\";\nconst PROFILE_URL = 'http://localhost:3000/api/v1/profile/';\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: {},\n      loading: true,\n      removeTask: true,\n      tasks: {}\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        currentUser: user,\n        loading: false,\n        tasks: user.tasks\n      });\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.setState({\n        currentUser: {}\n      });\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        fetch(PROFILE_URL, {\n          headers: {\n            \"Authentication\": \"Bearer \".concat(localStorage.getItem(\"token\"))\n          }\n        }).then(res => res.json()).then(res => {\n          this.updateUser(res);\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.handleUser = (event, newUser, contractor) => {\n      event.preventDefault();\n      let contractors = \"\";\n\n      if (contractor) {\n        contractors = 'contractors';\n      }\n\n      let data = {\n        name: event.target.name.value,\n        password: event.target.password.value,\n        new_user: newUser\n      };\n      fetch(URL + contractors, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.authenticated) {\n          localStorage.setItem(\"token\", data.token);\n\n          switch (contractor) {\n            case contractor === \"\":\n              this.setState({\n                currentUser: JSON.parse(data.user)\n              });\n              break;\n\n            case contractor === \"contractors\":\n          }\n        }\n      });\n    };\n\n    this.acceptBid = (bid, task) => {\n      if (!bid.status) {\n        let data = {\n          task: {\n            id: task.id,\n            task_done: true,\n            user_id: this.state.currentUser.id,\n            bids_attributes: {\n              id: bid.id,\n              status: true\n            }\n          }\n        };\n        fetch(\"http://localhost:3000/tasks/\".concat(task.id), {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        }).then(res => res.json()).then(currentUser => this.setState({\n          currentUser\n        }));\n      }\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.headline.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.state.currentUser.id\n      };\n      event.target.reset();\n      fetch(TASKS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        console.log('end', currentUser);\n        let updateUser = this.state.currentUser;\n        updateUser.tasks = currentUser.tasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n    };\n\n    this.deleteBid = bid => {\n      let data = {\n        id: bid.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/bids/\".concat(bid.id), {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => {\n        this.updateUser(currentUser);\n      });\n    };\n\n    this.deleteTask = task => {\n      let data = {\n        id: task.id,\n        user_id: this.state.currentUser.id\n      };\n      fetch(\"http://localhost:3000/tasks/\".concat(task.id), {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(updatedUser => {\n        let updateUser = this.state.currentUser;\n        let currentUserTasks = updateUser.tasks.filter(t => t.id !== task.id);\n        updateUser.tasks = currentUserTasks;\n        this.setState({\n          currentUser: updateUser\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      style: {\n        height: '50vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"BEST OFFER OR ELSE\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, !isEmpty(this.state.currentUser) ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"To Profile Page\")), React.createElement(Link, {\n      to: \"/contractors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"View Contractors\")), React.createElement(\"button\", {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"Logout\")) : null), !this.state.loading ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        newUser: false,\n        contractor: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login/contractor\",\n      render: () => !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n        to: \"/contractor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        newUser: false,\n        contractor: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: () => !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        handleUser: this.handleUser,\n        newUser: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), !isEmpty(this.state.currentUser) ? React.createElement(Route, {\n      exact: true,\n      path: \"/task/:id\",\n      render: props => {\n        let taskObj = this.state.currentUser.tasks.find(task => task.id == props.match.params.id);\n        return !isEmpty(taskObj) ? React.createElement(TaskShowPage, {\n          task: taskObj,\n          acceptBid: this.acceptBid,\n          deleteBid: this.deleteBid,\n          deleteTask: this.deleteTask,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }) : React.createElement(Redirect, {\n          to: \"/profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: () => !isEmpty(this.state.currentUser) ? React.createElement(ProfileContainer, {\n        user: this.state.currentUser,\n        specialties: specialties,\n        tasks: this.state.tasks,\n        addTask: this.addTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/contractor\",\n      render: () => !isEmpty(this.state.currentUser) ? React.createElement(ProfileContainer, {\n        user: this.state.currentUser,\n        specialties: specialties,\n        tasks: this.state.tasks,\n        addTask: this.addTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/contractors\",\n      render: routerProps => {\n        return React.createElement(ContractorsContainer, Object.assign({\n          user: this.state.currentUser,\n          specialties: specialties,\n          currentTask: this.currentTask\n        }, routerProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js"],"names":["React","Login","ProfileContainer","ContractorsContainer","TaskShowPage","isEmpty","Link","BrowserRouter","Router","Route","Switch","Redirect","specialties","URL","CONTRACTOR_URL","PROFILE_URL","TASKS","App","Component","state","currentUser","loading","removeTask","tasks","updateUser","user","setState","logout","localStorage","clear","componentDidMount","getItem","fetch","headers","then","res","json","handleUser","event","newUser","contractor","preventDefault","contractors","data","name","target","value","password","new_user","method","body","JSON","stringify","console","log","authenticated","setItem","token","parse","acceptBid","bid","task","status","id","task_done","user_id","bids_attributes","addTask","headline","description","specialty_id","specialty","reset","deleteBid","deleteTask","updatedUser","currentUserTasks","filter","t","render","height","props","taskObj","find","match","params","routerProps","currentTask"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport 'semantic-ui-css/semantic.min.css'\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport ContractorsContainer from \"./containers/ContractorsContainer\";\nimport TaskShowPage from \"./components/TaskShowPage\";\n// import ContractorShowPage from \"./components/ContractorShowPage\"\nimport { isEmpty } from \"lodash\";\nimport {Link} from 'react-router-dom'\n\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n// import ContractorShowPage from \"./components/ContractorShowPage\";\nconst specialties = [\n  \"gardening\",\n  \"plumbing\",\n  \"technology\",\n  \"electrician\",\n  \"carpentry\"\n];\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst CONTRACTOR_URL = \"http://localhost:3000/api/v1/login/contractors\"\nconst PROFILE_URL = 'http://localhost:3000/api/v1/profile/'\nconst TASKS = \"http://localhost:3000/tasks/\";\n\nexport default class App extends React.Component {\n  state = {\n    currentUser: {}, \n    loading: true,\n    removeTask: true,\n    tasks: {}\n   \n  };\n\n \n\n  updateUser = (user) => {\n    this.setState({\n      currentUser: user, \n      loading: false,\n      tasks: user.tasks\n    })\n  }\n\n\n\n  logout = () => {\n    localStorage.clear()\n    this.setState({\n      currentUser: {}\n    })\n  };\n\n  componentDidMount = () => {\n    if(localStorage.getItem(\"token\")){\n      \n      fetch(PROFILE_URL, {\n        headers: { \"Authentication\": \n        `Bearer ${localStorage.getItem(\"token\")}` \n        }\n      }\n      )\n      .then(res => res.json())\n      .then(res => {\n       \n        this.updateUser(res)})\n    }\n    else{\n      this.setState({loading: false})\n    }\n  }\n\n\n  handleUser = (event, newUser, contractor) => {\n    event.preventDefault();\n    let contractors = \"\"\n      if(contractor){\n           contractors = 'contractors' \n          }\n     \n  \n    let data = {\n      name: event.target.name.value, \n      password: event.target.password.value,\n      new_user: newUser\n    }\n\n\n    fetch(URL + contractors, {\n      method: 'POST', \n      headers: { \n        'Content-Type': 'application/json'\n      }, \n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(data => {\n          console.log(data)\n      if(data.authenticated){\n        localStorage.setItem(\"token\", data.token)\n        switch(contractor){\n            case contractor === \"\":\n                this.setState({\n              currentUser: JSON.parse(data.user)}\n            )\n            break;\n          case contractor === \"contractors\":\n        \n        \n        }}\n      });\n  };\n\n  acceptBid = (bid, task) => {\n    \n    if(!bid.status){\n      let data = {\n        task:{\n        id: task.id,\n        task_done: true,\n        user_id: this.state.currentUser.id,\n        bids_attributes:\n            {\n            id: bid.id, \n            status: true\n            }\n        }\n      }\n      \n      \n    fetch(`http://localhost:3000/tasks/${task.id}`, {\n      method: 'PATCH', \n      headers: { \n        'Content-Type': 'application/json'\n      }, \n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(currentUser => this.setState({currentUser}))\n    }\n  \n  }\n\n  addTask = (event) => {\n    \n    event.preventDefault();\n    let data = {\n      name: event.target.headline.value,\n      description: event.target.description.value,\n      specialty_id: event.target.specialty.value,\n      user_id: this.state.currentUser.id\n    };\n    event.target.reset();\n    \n    fetch(TASKS, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser =>{\n        console.log('end', currentUser)\n        let updateUser = this.state.currentUser\n        updateUser.tasks = currentUser.tasks\n        this.setState({\n          currentUser : updateUser\n        })}\n      );\n  };\n\n\n\n  deleteBid = (bid) =>{\n    let data = {\n      id: bid.id,\n      user_id: this.state.currentUser.id\n    }\n    fetch(`http://localhost:3000/bids/${bid.id}`, {\n      method: 'DELETE', \n      headers: { \n        'Content-Type': 'application/json'\n      }, \n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(currentUser => {\n      \n    this.updateUser(currentUser)\n    })\n  }\n\n  deleteTask = (task) =>{\n\n    let data = {\n      id: task.id,\n      user_id: this.state.currentUser.id\n    }\n    fetch(`http://localhost:3000/tasks/${task.id}`, {\n      method: 'DELETE', \n      headers: { \n        'Content-Type': 'application/json'\n      }, \n      body: JSON.stringify(data)\n    })\n    .then(res => res.json())\n    .then(updatedUser => {\n      let updateUser = this.state.currentUser\n      let currentUserTasks = updateUser.tasks.filter(t => t.id !== task.id)\n      updateUser.tasks = currentUserTasks\n      this.setState({\n        currentUser: updateUser\n      })})\n  }\n\n  render() {\n    return (\n      <div className=\"App\" style={{height: '50vh'}}>\n        <h1>BEST OFFER OR ELSE</h1>\n        <p>\n          {!isEmpty(this.state.currentUser) ? <React.Fragment> \n            <Link to='/profile'> <button>To Profile Page</button></Link>\n            <Link to='/contractors'> <button>View Contractors</button></Link>  \n            <button onClick={this.logout}>Logout</button>\n          </React.Fragment>\n        : null\n        }\n        </p>\n        {!this.state.loading ? <Switch>\n          <Route\n            exact\n            path=\"/login\"\n            render={() =>\n              !isEmpty(this.state.currentUser) ? (\n                <Redirect to=\"/profile\" />\n              ) : (\n                <Login handleUser={this.handleUser} newUser={false} contractor={false}/>\n              )\n            }\n          />\n\n          <Route\n            exact\n            path=\"/login/contractor\"\n            render={() =>\n              !isEmpty(this.state.currentUser) ? (\n                <Redirect to=\"/contractor\" />\n              ) : (\n                <Login handleUser={this.handleUser} newUser={false} contractor={true}/>\n              )\n            }\n          />\n          \n          <Route\n            exact\n            path=\"/signup\"\n            render={() =>\n              !isEmpty(this.state.currentUser) ? (\n                <Redirect to=\"/profile\" />\n              ) : (\n                <Login handleUser={this.handleUser} newUser={true}/>\n              )\n            }\n          />\n\n            {!isEmpty(this.state.currentUser) ?\n              <Route exact \n                path=\"/task/:id\"\n                render={(props) =>{  \n                 let taskObj =  this.state.currentUser.tasks.find(task => task.id == props.match.params.id) \n                  return   !isEmpty(taskObj) ?\n                  <TaskShowPage\n                      task={taskObj}\n                     \n                      acceptBid={this.acceptBid}\n                      deleteBid={this.deleteBid}\n                      deleteTask={this.deleteTask}\n                  />\n                  :\n                  <Redirect to=\"/profile\" />\n                    \n                }}/>\n              :\n              \n              <Redirect to=\"/login\" />\n              \n              \n              }\n\n\n\n\n          <Route\n            exact\n            path=\"/profile\"\n            render={() =>\n              !isEmpty(this.state.currentUser) ? (\n                <ProfileContainer\n                  user={this.state.currentUser}\n                  specialties={specialties}\n                  tasks={this.state.tasks}\n                  addTask={this.addTask}\n                />\n              ) : \n                <Redirect to=\"/login\" />\n              }/>\n\n          <Route\n            exact\n            path=\"/contractor\"\n            render={() =>\n              !isEmpty(this.state.currentUser) ? (\n                <ProfileContainer\n                  user={this.state.currentUser}\n                  specialties={specialties}\n                  tasks={this.state.tasks}\n                  addTask={this.addTask}\n                />\n              ) : \n                <Redirect to=\"/login\" />\n              }/>\n            \n            \n     \n\n            <Route \n                   path='/contractors' render={(routerProps) =>{  \n                  \n              return  <ContractorsContainer\n                  user={this.state.currentUser}\n                  specialties={specialties}\n                  currentTask={this.currentTask}\n                 {...routerProps}\n            />}}/>\n\n\n          <Route path=\"/\" render={() => <Redirect to=\"/login\" />} />\n        </Switch> : null}\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}