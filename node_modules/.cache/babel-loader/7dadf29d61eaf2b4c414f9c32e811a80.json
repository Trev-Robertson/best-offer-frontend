{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js\";\nimport React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\"; // import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\nexport default class Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      specialties: [],\n      currentUser: {}\n    };\n\n    this.addTask = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.name.value,\n        description: event.target.description.value,\n        specialty_id: event.target.specialty.value,\n        user_id: this.props.user.id\n      };\n      event.target.reset();\n      console.log(event);\n      fetch(TASKS, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(currentUser => this.setState({\n        currentUser\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch(SPECIALTIES).then(res => res.json()).then(specialties => this.setState({\n      specialties: specialties,\n      currentUser: this.props.user\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"columns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Hi, \", this.state.currentUser ? this.state.currentUser.name : null), React.createElement(NewTaskForm, {\n      specialties: this.state.specialties,\n      addTask: this.addTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Current Bids\", \" \", !isEmpty(this.state.currentUser) ? this.state.currentUser.tasks.map(task => React.createElement(\"p\", {\n      key: task.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \", \"Job: \", task.name, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \" Description: \", task.description, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \" Active Bids:\", \" \", task.bids.map(bid => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"$\", bid.price, \" by \", bid.contractor.name)), \" \")) : null));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/components/profile.js"],"names":["React","NewTaskForm","isEmpty","SPECIALTIES","TASKS","Profile","Component","state","specialties","currentUser","addTask","event","preventDefault","data","name","target","value","description","specialty_id","specialty","user_id","props","user","id","reset","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","setState","componentDidMount","render","tasks","map","task","bids","bid","price","contractor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CACA;AACA;;AAEA,MAAMC,WAAW,GAAG,oCAApB;AACA,MAAMC,KAAK,GAAG,8BAAd;AAEA,eAAe,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACnDC,KADmD,GAC3C;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,WAAW,EAAE;AAFP,KAD2C;;AAAA,SAiBnDC,OAjBmD,GAiBzCC,KAAK,IAAI;AACjBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAG;AACTC,QAAAA,IAAI,EAAEH,KAAK,CAACI,MAAN,CAAaD,IAAb,CAAkBE,KADf;AAETC,QAAAA,WAAW,EAAEN,KAAK,CAACI,MAAN,CAAaE,WAAb,CAAyBD,KAF7B;AAGTE,QAAAA,YAAY,EAAEP,KAAK,CAACI,MAAN,CAAaI,SAAb,CAAuBH,KAH5B;AAITI,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC;AAJhB,OAAX;AAMAZ,MAAAA,KAAK,CAACI,MAAN,CAAaS,KAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAgB,MAAAA,KAAK,CAACvB,KAAD,EAAQ;AACXwB,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFE;AAGXC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,IAAf;AAHK,OAAR,CAAL,CAKGoB,IALH,CAKQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALf,EAMGF,IANH,CAMQxB,WAAW,IACf,KAAK2B,QAAL,CAAc;AACZ3B,QAAAA;AADY,OAAd,CAPJ;AAWD,KAtCkD;AAAA;;AAMnD4B,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,KAAK,CAACxB,WAAD,CAAL,CACG8B,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQzB,WAAW,IACf,KAAK4B,QAAL,CAAc;AACZ5B,MAAAA,WAAW,EAAEA,WADD;AAEZC,MAAAA,WAAW,EAAE,KAAKY,KAAL,CAAWC;AAFZ,KAAd,CAHJ;AAQD;;AAyBDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACO,KAAK/B,KAAL,CAAWE,WAAX,GAAyB,KAAKF,KAAL,CAAWE,WAAX,CAAuBK,IAAhD,GAAuD,IAD9D,CADF,EAIE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAE,KAAKP,KAAL,CAAWC,WAD1B;AAEE,MAAA,OAAO,EAAE,KAAKE,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAQE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACe,GADf,EAEG,CAACR,OAAO,CAAC,KAAKK,KAAL,CAAWE,WAAZ,CAAR,GACG,KAAKF,KAAL,CAAWE,WAAX,CAAuB8B,KAAvB,CAA6BC,GAA7B,CAAiCC,IAAI,IACnC;AAAG,MAAA,GAAG,EAAEA,IAAI,CAAClB,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,WAEQkB,IAAI,CAAC3B,IAFb,OAEmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFnB,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,oBAGuB2B,IAAI,CAACxB,WAH5B,OAGyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHzC,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,mBAIsB,GAJtB,EAKGwB,IAAI,CAACC,IAAL,CAAUF,GAAV,CAAcG,GAAG,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACIA,GAAG,CAACC,KADR,UACmBD,GAAG,CAACE,UAAJ,CAAe/B,IADlC,CADD,CALH,EASM,GATN,CADF,CADH,GAcG,IAhBN,CARF,CADF;AA6BD;;AAtEkD","sourcesContent":["import React from \"react\";\nimport NewTaskForm from \"./NewTaskForm\";\nimport { isEmpty } from \"lodash\";\n// import store from '../redux/store'\n// import {Link} from 'react-router-dom'\n\nconst SPECIALTIES = \"http://localhost:3000/specialties/\";\nconst TASKS = \"http://localhost:3000/tasks/\";\n\nexport default class Profile extends React.Component {\n  state = {\n    specialties: [],\n    currentUser: {}\n  };\n\n  componentDidMount() {\n    fetch(SPECIALTIES)\n      .then(res => res.json())\n      .then(specialties =>\n        this.setState({\n          specialties: specialties,\n          currentUser: this.props.user\n        })\n      );\n  }\n\n  addTask = event => {\n    event.preventDefault();\n    let data = {\n      name: event.target.name.value,\n      description: event.target.description.value,\n      specialty_id: event.target.specialty.value,\n      user_id: this.props.user.id\n    };\n    event.target.reset();\n    console.log(event);\n    fetch(TASKS, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(currentUser =>\n        this.setState({\n          currentUser\n        })\n      );\n  };\n\n  render() {\n    return (\n      <div className=\"columns\">\n        <div className=\"column\">\n          Hi, {this.state.currentUser ? this.state.currentUser.name : null}\n        </div>\n        <NewTaskForm\n          specialties={this.state.specialties}\n          addTask={this.addTask}\n        />\n        <div className=\"column\">\n          Current Bids{\" \"}\n          {!isEmpty(this.state.currentUser)\n            ? this.state.currentUser.tasks.map(task => (\n                <p key={task.id}>\n                  {\" \"}\n                  Job: {task.name} <br />\n                  <br /> Description: {task.description} <br />\n                  <br /> Active Bids:{\" \"}\n                  {task.bids.map(bid => (\n                    <p>\n                      ${bid.price} by {bid.contractor.name}\n                    </p>\n                  ))}{\" \"}\n                </p>\n              ))\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}