{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport { isEmpty } from \"lodash\"; // import ReactDOM from \"react-dom\";\n\nimport TaskShowPage from \"./components/TaskShowPage\";\nimport { // eslint-disable-next-line\nBrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst PROFILE_URL = 'http://localhost:3000/api/v1/profile/';\nexport default class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: {},\n      loading: true\n    };\n\n    this.updateUser = user => {\n      this.setState({\n        currentUser: user,\n        loading: false,\n        taskShowPage: false\n      });\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.setState({\n        currentUser: {}\n      });\n    };\n\n    this.componentDidMount = () => {\n      if (localStorage.getItem(\"token\")) {\n        fetch(PROFILE_URL, {\n          headers: {\n            \"Authentication\": \"Bearer \".concat(localStorage.getItem(\"token\"))\n          }\n        }).then(res => res.json()).then(res => {\n          this.updateUser(res);\n        });\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.getTask = task => {\n      console.log(task);\n      this.setState({\n        task\n      });\n      return task;\n    };\n\n    this.currentUser = event => {\n      event.preventDefault();\n      let data = {\n        name: event.target.name.value,\n        password: event.target.password.value\n      };\n      fetch(URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(res => res.json()).then(data => {\n        if (data.authenticated) {\n          localStorage.setItem(\"token\", data.token);\n          this.setState({\n            currentUser: JSON.parse(data.user)\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"BEST OFFER OR ELSE\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Logout\")), !this.state.loading ? React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => !isEmpty(this.state.currentUser) ? React.createElement(Redirect, {\n        to: \"/profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        login: this.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile\",\n      render: () => !isEmpty(this.state.currentUser) ? React.createElement(ProfileContainer, {\n        user: this.state.currentUser,\n        getTask: this.getTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }) : React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/profile/:id\",\n      render: () => React.createElement(TaskShowPage, {\n        user: this.state.currentUser,\n        task: this.getTask(),\n        togglePage: this.togglePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })) : null);\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/dev/mod5-project/best-offer/best-offer-frontend/src/App.js"],"names":["React","Login","ProfileContainer","isEmpty","TaskShowPage","BrowserRouter","Router","Route","Switch","Redirect","URL","PROFILE_URL","App","Component","state","currentUser","loading","updateUser","user","setState","taskShowPage","logout","localStorage","clear","componentDidMount","getItem","fetch","headers","then","res","json","getTask","task","console","log","event","preventDefault","data","name","target","value","password","method","body","JSON","stringify","authenticated","setItem","token","parse","render","togglePage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"./App.sass\";\nimport Login from \"./components/Login\";\nimport ProfileContainer from \"./containers/ProfileContainer\";\nimport { isEmpty } from \"lodash\";\n// import ReactDOM from \"react-dom\";\nimport TaskShowPage from \"./components/TaskShowPage\";\n\nimport {\n  // eslint-disable-next-line\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nconst URL = \"http://localhost:3000/api/v1/login/\";\nconst PROFILE_URL = 'http://localhost:3000/api/v1/profile/'\n\nexport default class App extends React.Component {\n  state = {\n    currentUser: {}, \n    loading: true\n  };\n\n  // componentDidMount(){\n  //   fetch(URL)\n  //   .then(res => res.json())\n  //   .then(allUsers => this.setState({\n  //     allUsers\n  //   }))\n  // }\n\n  updateUser = (user) => {\n    this.setState({\n      currentUser: user, \n      loading: false,\n      taskShowPage: false\n    })\n  }\n\n\n  logout = () => {\n    localStorage.clear()\n    this.setState({\n      currentUser: {}\n    })\n  };\n\n  componentDidMount = () => {\n    if(localStorage.getItem(\"token\")){\n      \n      fetch(PROFILE_URL, {\n        headers: { \"Authentication\": \n        `Bearer ${localStorage.getItem(\"token\")}` \n        }\n      }\n      )\n      .then(res => res.json())\n      .then(res => {this.updateUser(res)})\n    }\n    else{\n      this.setState({loading: false})\n    }\n  }\n\n    getTask = (task) =>{\n      console.log(task)\n      this.setState({\n        task\n      })\n        return task\n    }\n\n  currentUser = event => {\n    event.preventDefault();\n   \n    let data = {\n      name: event.target.name.value, \n      password: event.target.password.value\n    }\n    fetch(URL, {\n      method: 'POST', \n      headers: { \n        'Content-Type': 'application/json'\n      }, \n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(data => {\n   \n      if(data.authenticated){\n        localStorage.setItem(\"token\", data.token)\n        this.setState({\n          currentUser: JSON.parse(data.user)\n        })}\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>BEST OFFER OR ELSE</h1>\n        <p>\n          <button onClick={this.logout}>Logout</button>\n        </p>\n        {!this.state.loading ? <Switch>\n          <Route\n            exact\n            path=\"/login\"\n            render={() =>\n              !isEmpty(this.state.currentUser) ? (\n                <Redirect to=\"/profile\" />\n              ) : (\n                <Login login={this.currentUser} />\n              )\n            }\n          />\n\n          <Route\n           exact path=\"/profile\"\n            render={() =>\n              !isEmpty(this.state.currentUser) ? (\n                <ProfileContainer\n                  user={this.state.currentUser}\n                  getTask={this.getTask}\n                />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n            <Route\n           exact path=\"/profile/:id\"\n            render={() =>\n                <TaskShowPage\n                user={this.state.currentUser}\n                task={this.getTask()}\n                togglePage={this.togglePage}\n              />\n\n            }\n          />\n\n          <Route path=\"/\" render={() => <Redirect to=\"/login\" />} />\n        </Switch> : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}